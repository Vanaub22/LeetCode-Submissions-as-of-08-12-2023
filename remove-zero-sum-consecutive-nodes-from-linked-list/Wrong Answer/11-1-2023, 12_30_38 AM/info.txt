{"id":1088591652,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1698778838,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1088591652/","is_pending":"Not Pending","title":"Remove Zero Sum Consecutive Nodes from Linked List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* removeZeroSumSublists(ListNode* head) {\n        map<int,ListNode*> pref;\n        // Attaching one extra node so that the reference is not lost even if the head node is removed\n        ListNode* extra=new ListNode(0,head),*temp=extra;\n        int prefSum=0;\n        while(temp) {\n            prefSum+=temp->val;\n            if(pref.find(prefSum)==pref.end()) pref[prefSum]=temp;\n            else pref[prefSum]->next=temp->next; // Removing all nodes in between\n            temp=temp->next;\n        }\n        return extra->next;\n    }\n};","compare_result":"111111001111111111111111111111111111111011111111111110111111111011011101100100110111110100000000000011111","title_slug":"remove-zero-sum-consecutive-nodes-from-linked-list","has_notes":false,"flag_type":1}