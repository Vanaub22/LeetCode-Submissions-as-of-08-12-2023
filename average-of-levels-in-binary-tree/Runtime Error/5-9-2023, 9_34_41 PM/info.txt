{"id":947324930,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1683648281,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/947324930/","is_pending":"Not Pending","title":"Average of Levels in Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<double> averageOfLevels(TreeNode* root) {\n        vector<double> level_averages;\n        queue<TreeNode*> Q;\n        Q.push(root);\n        while(!Q.empty()){\n            int n=Q.size();\n            vector<int> level;\n            for(int i=1;i<=n;i++){\n                if(Q.front()->left)\n                Q.push(Q.front()->left);\n                if(Q.front()->right)\n                Q.push(Q.front()->right);\n                level.push_back(Q.front()->val);\n                Q.pop();\n            }\n            level_averages.push_back((double)accumulate(level.begin(),level.end(),0)/level.size());\n        }\n        return(level_averages);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111110000","title_slug":"average-of-levels-in-binary-tree","has_notes":false,"flag_type":1}