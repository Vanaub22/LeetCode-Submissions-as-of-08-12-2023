{"id":1093483902,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1699347806,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1093483902/","is_pending":"Not Pending","title":"Distribute Coins in Binary Tree","memory":"14.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int distributeCoins(TreeNode* root) {\n        int moves=0;\n        calcMoves(root,moves);\n        return moves;\n    }\n    // Will be using Post-Order Traversal DFS\n    int calcMoves(TreeNode* root, int& moves) {\n        if(!root) return 0;\n        int left_need,right_need=left_need=0;\n        if(root->left) left_need=calcMoves(root->left,moves);\n        if(root->right) right_need=calcMoves(root->right,moves);\n        moves+=abs(left_need)+abs(right_need);\n        return root->val+left_need+right_need-1;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"distribute-coins-in-binary-tree","has_notes":false,"flag_type":1}