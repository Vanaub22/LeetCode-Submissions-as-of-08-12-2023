{"id":938664085,"lang":"cpp","lang_name":"C++","time":"7 months, 2 weeks","timestamp":1682291265,"status":10,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/938664085/","is_pending":"Not Pending","title":"Add Two Numbers","memory":"71.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    int Carry(int a, int b, int c){\n        return(a+b+c>9?1:0);\n    }\n    int Sum(int a, int b, int c){\n        return(a+b+c>9?(a+b+c)%10:a+b+c);\n    }\n    void removeLeadZero(ListNode* &head){\n        if(!head||!head->next)\n        return;\n        ListNode *temp=head,*prev;\n        while(temp->next){\n            prev=temp;\n            temp=temp->next;\n        }\n        prev->next=temp->next;\n        delete(temp);\n    }\n    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n        int c=0,s;\n        ListNode *head=new ListNode();\n        ListNode *temp=head;\n        while(l1&&l2){\n            s=Sum(l1->val,l2->val,c);\n            c=Carry(l1->val,l2->val,c);\n            temp->val=s;\n            ListNode *newNode=new ListNode();\n            temp->next=newNode;\n            temp=temp->next;\n            l1=l1->next;\n            l2=l2->next;\n        }\n        while(l1){\n            if(c){\n                temp->val=Sum(l1->val,0,c);\n                c=Carry(l1->val,0,c);\n            }\n            else\n            temp->val=l1->val;\n            ListNode *newNode=new ListNode();\n            temp->next=newNode;\n            temp=temp->next;\n            l1=l1->next;\n        }\n        while(l2){\n            if(c){\n                temp->val=Sum(l2->val,0,c);\n                c=Carry(l2->val,0,c);\n            }\n            else\n            temp->val=l2->val;\n            ListNode *newNode=new ListNode();\n            temp->next=newNode;\n            temp=temp->next;\n            l2=l2->next;\n        }\n        if(c)\n        temp->val=c;\n        else\n        removeLeadZero(head);\n        return(head);\n    }\n};","compare_resulttitle_slug":"add-two-numbers","has_notes":false,"flag_type":1}