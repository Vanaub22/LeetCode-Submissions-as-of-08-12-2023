{"id":1074786441,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1697266608,"status":10,"status_display":"Accepted","runtime":"117 ms","url":"/submissions/detail/1074786441/","is_pending":"Not Pending","title":"Flower Planting With No Adjacent","memory":"44.9 MB","code":"class Solution {\npublic:\n    // Not checking for neighbouring nodes, simply changing colours\n    void colouring_dfs(int start, vector<int> adj[], vector<int>& colours, int colour) {\n        if(colours[start-1]!=-1) return;\n        colours[start-1]=colour%4;\n        for(int neighbour:adj[start]) colouring_dfs(neighbour,adj,colours,colour+1);\n    }\n    // Checking for neighbours and then assigning a different colour\n    void check_colour_dfs(int start, vector<int> adj[], bool visited[], vector<int>& colours) {\n        visited[start]=true;\n        bool taken_colours[5]; // 1-indexed\n        memset(taken_colours,false,sizeof(taken_colours));\n        // Finding out which colours are taken up by the neighbours\n        for(int neighbour:adj[start]) taken_colours[colours[neighbour-1]]=true;\n        // Assigning the first colour not taken up by the neighbours\n        for(int i=1;i<5;i++) if(!taken_colours[i]) {\n            colours[start-1]=i;\n            break;\n        }\n        for(int neighbour:adj[start]) if(!visited[neighbour]) check_colour_dfs(neighbour,adj,visited,colours);\n    }\n    vector<int> gardenNoAdj(int n, vector<vector<int>>& paths) {\n        // Converting to Adjacency Matrix (1-indexed)\n        vector<int> adj[n+1];\n        for(auto path:paths) {\n            adj[path[0]].push_back(path[1]);\n            adj[path[1]].push_back(path[0]);\n        }\n        vector<int> colours(n,-1); // -1 from colours indices every time (0-indexed answer)\n        // Everything else is 1-indexed\n        // Performing DFS and assigning different colours\n        for(int i=1;i<=n;i++) if(colours[i-1]<1) colouring_dfs(i,adj,colours,1);\n        bool visited[n+1]; // 1-indexed\n        memset(visited,false,sizeof(visited));\n        for(int i=1;i<=n;i++) if(!visited[i]) check_colour_dfs(i,adj,visited,colours);\n        return colours;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"flower-planting-with-no-adjacent","has_notes":false,"flag_type":1}