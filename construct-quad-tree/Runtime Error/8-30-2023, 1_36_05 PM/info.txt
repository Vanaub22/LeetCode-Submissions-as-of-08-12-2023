{"id":1035782051,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1693382765,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1035782051/","is_pending":"Not Pending","title":"Construct Quad Tree","memory":"N/A","code":"/*\n// Definition for a QuadTree node.\nclass Node {\npublic:\n    bool val;\n    bool isLeaf;\n    Node* topLeft;\n    Node* topRight;\n    Node* bottomLeft;\n    Node* bottomRight;\n    \n    Node() {\n        val = false;\n        isLeaf = false;\n        topLeft = NULL;\n        topRight = NULL;\n        bottomLeft = NULL;\n        bottomRight = NULL;\n    }\n    \n    Node(bool _val, bool _isLeaf) {\n        val = _val;\n        isLeaf = _isLeaf;\n        topLeft = NULL;\n        topRight = NULL;\n        bottomLeft = NULL;\n        bottomRight = NULL;\n    }\n    \n    Node(bool _val, bool _isLeaf, Node* _topLeft, Node* _topRight, Node* _bottomLeft, Node* _bottomRight) {\n        val = _val;\n        isLeaf = _isLeaf;\n        topLeft = _topLeft;\n        topRight = _topRight;\n        bottomLeft = _bottomLeft;\n        bottomRight = _bottomRight;\n    }\n};\n*/\nclass Solution {\npublic:\n    Node* construct(vector<vector<int>>& grid){\n        return recursive_construct(grid,0,0,grid.size(),grid[0].size());\n    }\n    Node* recursive_construct(vector<vector<int>>& grid, int r, int c, int m, int n) {\n        int init_val=grid[r][c];\n        Node* root=new Node(init_val==1,true);\n        for(int i=r;i<m;i++) for(int j=c;j<n;j++) if(grid[i][j]!=init_val){\n            root->isLeaf=false;\n            break;\n        }\n        if(!root->isLeaf){\n            root->topLeft=recursive_construct(grid,r,c,r+(m-r)/2,c+(n-c)/2);\n            root->topRight=recursive_construct(grid,r,c+(n-c)/2,r+(m-r)/2,n);\n            root->bottomLeft=recursive_construct(grid,r+(m-r)/2,c,m,c+(n-c)/2);\n            root->bottomRight=recursive_construct(grid,r+(m-r)/2,n/2,m,n);\n        }\n        return root;\n    }\n};","compare_result":"1111111000000000000000","title_slug":"construct-quad-tree","has_notes":false,"flag_type":1}