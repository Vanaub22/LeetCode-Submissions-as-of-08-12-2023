{"id":930168652,"lang":"cpp","lang_name":"C++","time":"8Â months","timestamp":1680963516,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/930168652/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *detectCycle(ListNode *head) {\n        set<ListNode*> nodeAddresses={head};\n        ListNode* temp=head->next;\n        while(temp){\n            if(nodeAddresses.find(temp)==nodeAddresses.end())\n            nodeAddresses.insert(temp);\n            else\n            return(temp);\n            temp=temp->next;\n        }\n        return(NULL);\n    }\n};","compare_result":"11100000000000000","title_slug":"linked-list-cycle-ii","has_notes":false,"flag_type":1}