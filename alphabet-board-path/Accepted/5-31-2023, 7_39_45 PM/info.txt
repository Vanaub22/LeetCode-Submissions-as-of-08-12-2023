{"id":960981879,"lang":"cpp","lang_name":"C++","time":"6 months, 1 week","timestamp":1685542185,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/960981879/","is_pending":"Not Pending","title":"Alphabet Board Path","memory":"6.7 MB","code":"class Solution {\npublic:\n    void constructPath(int idx,string target,int i,int j,string& path,unordered_map<char,pair<int,int>>& board){\n        if(idx>target.size()-1)\n        return;\n        int trow=board[target[idx]].first,tcol=board[target[idx]].second,diff_row=abs(trow-i),diff_col=abs(tcol-j);\n        if(trow<i)\n        path+=(string(diff_row,'U'));\n        if(trow>i){\n            if(trow==5)\n            --diff_row;\n            path+=(string(diff_row,'D'));\n        }\n        if(tcol<j)\n        path+=(string(diff_col,'L'));\n        if(tcol>j)\n        path+=(string(diff_col,'R'));\n        if(trow==5 && i!=5)\n        path+=\"D\";\n        path+='!';\n        constructPath(idx+1,target,trow,tcol,path,board);\n    }\n    string alphabetBoardPath(string target) {\n        string path=\"\";\n        unordered_map<char,pair<int,int>> board;\n        board['z']={5,0}; \n        char c='a';\n        for(int i=0;i<5;i++)\n        for(int j=0;j<5;j++)\n        board[c++]={i,j};\n        constructPath(0,target,0,0,path,board);\n        return(path);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"alphabet-board-path","has_notes":false,"flag_type":1}