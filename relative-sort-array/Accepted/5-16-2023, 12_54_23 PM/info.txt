{"id":951275645,"lang":"cpp","lang_name":"C++","time":"6 months, 3 weeks","timestamp":1684221863,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/951275645/","is_pending":"Not Pending","title":"Relative Sort Array","memory":"7.8 MB","code":"class Solution {\npublic:\n    static bool comp(pair<int,int>& a, pair<int,int>& b){\n        return(a.second<=b.second);\n    }\n    vector<int> relativeSortArray(vector<int>& arr1, vector<int>& arr2) {\n        unordered_map<int,int> umap;\n        vector<int> extra;\n        vector<pair<int,int>> mapped;\n        for(int i=0;i<arr2.size();i++)\n        umap[arr2[i]]=i+1;\n        for(int i:arr1)\n        if(umap[i]==0)\n        extra.push_back(i);\n        else\n        mapped.push_back({i,umap[i]-1});\n        sort(extra.begin(),extra.end());\n        sort(mapped.begin(),mapped.end(),comp);\n        arr1.clear();\n        for(auto it:mapped)\n        arr1.push_back(it.first);\n        for(int i:extra)\n        arr1.push_back(i);\n        return(arr1);\n    }\n};","compare_result":"11111111111111111","title_slug":"relative-sort-array","has_notes":false,"flag_type":1}