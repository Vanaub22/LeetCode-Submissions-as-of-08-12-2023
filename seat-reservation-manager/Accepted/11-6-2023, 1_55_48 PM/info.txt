{"id":1092649388,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1699259148,"status":10,"status_display":"Accepted","runtime":"307 ms","url":"/submissions/detail/1092649388/","is_pending":"Not Pending","title":"Seat Reservation Manager","memory":"148.1 MB","code":"class SeatManager {\npublic:\n    // Will be using MinHeap, implementing using Priority Queue STl\n    priority_queue<int,vector<int>,greater<int>> minHeap;\n    SeatManager(int n) {\n        for(int i=1;i<=n;i++) minHeap.push(i);\n    }\n    // Will be popping out from MinHeap and returning\n    int reserve() {\n        int lowestAvailable=minHeap.top();\n        minHeap.pop();\n        return lowestAvailable;\n    }\n    // Will be adding seatNumber to MinHeap (ordering will be handled internally)\n    void unreserve(int seatNumber) {\n        minHeap.push(seatNumber);\n    }\n};\n\n/**\n * Your SeatManager object will be instantiated and called as such:\n * SeatManager* obj = new SeatManager(n);\n * int param_1 = obj->reserve();\n * obj->unreserve(seatNumber);\n */","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"seat-reservation-manager","has_notes":false,"flag_type":1}