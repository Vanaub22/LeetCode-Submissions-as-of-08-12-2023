{"id":1104619188,"lang":"cpp","lang_name":"C++","time":"2Â weeks","timestamp":1700715653,"status":10,"status_display":"Accepted","runtime":"72 ms","url":"/submissions/detail/1104619188/","is_pending":"Not Pending","title":"Arithmetic Subarrays","memory":"39.1 MB","code":"class Solution {\npublic:\n    vector<bool> checkArithmeticSubarrays(vector<int>& nums, vector<int>& l, vector<int>& r) {\n        // Low constraints => Brute Force\n        int n=l.size();\n        vector<bool> answer;\n        for(int i=0;i<n;i++) {\n            vector<int> subarray; // To find and store the subarray\n            for(int j=l[i];j<=r[i];j++) subarray.emplace_back(nums[j]);\n            answer.emplace_back(isArithmetic(subarray));\n        }\n        return answer;\n    }\n    bool isArithmetic(vector<int>& subarray) {\n        sort(subarray.begin(),subarray.end());\n        int diff=subarray[1]-subarray[0],n=subarray.size();\n        for(int i=1;i<n-1;i++) if(subarray[i+1]-subarray[i]!=diff) return false;\n        return true;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"arithmetic-subarrays","has_notes":false,"flag_type":1}