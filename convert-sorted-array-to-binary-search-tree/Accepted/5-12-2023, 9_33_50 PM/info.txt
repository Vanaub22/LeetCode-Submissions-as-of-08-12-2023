{"id":949096117,"lang":"cpp","lang_name":"C++","time":"6 months, 4 weeks","timestamp":1683907430,"status":10,"status_display":"Accepted","runtime":"108 ms","url":"/submissions/detail/949096117/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"342.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* recArrtoBST(vector<int> arr,int start,int end){\n        if(start>end)\n        return(NULL);\n        int mid=start+(end-start)/2;\n        TreeNode* root=new TreeNode(arr[mid]);\n        root->left=recArrtoBST(arr,start,mid-1);\n        root->right=recArrtoBST(arr,mid+1,end);\n        return(root);\n    }\n    TreeNode* sortedArrayToBST(vector<int>& arr) {\n        return(recArrtoBST(arr,0,arr.size()-1));\n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree","has_notes":false,"flag_type":1}