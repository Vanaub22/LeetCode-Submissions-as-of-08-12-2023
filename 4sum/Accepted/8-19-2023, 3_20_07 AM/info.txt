{"id":1025233589,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1692395407,"status":10,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/1025233589/","is_pending":"Not Pending","title":"4Sum","memory":"13.1 MB","code":"class Solution {\npublic:\n    vector<vector<int>> fourSum(vector<int>& nums, int target) {\n        int n=nums.size();\n        sort(nums.begin(),nums.end());\n        vector<vector<int>> quadruplets;\n        for(int i=0;i<n;i++){\n            if(i>0 && nums[i]==nums[i-1]) continue;\n            for(int j=i+1;j<n;j++){\n                if(j!=i+1 && nums[j]==nums[j-1]) continue;\n                int k=j+1,l=n-1;\n                while(k<l){\n                    long long sum=(long long)nums[i]+nums[j]+nums[k]+nums[l];\n                    if(sum==target){ \n                        quadruplets.push_back({nums[i],nums[j],nums[k],nums[l]});\n                        k++;\n                        l--;\n                        while(k<l && nums[k]==nums[k-1]) k++;\n                        while(k<l && nums[l]==nums[l+1]) l--;\n                    }\n                    else if(sum<target) k++;\n                    else l--;\n                }\n            }\n        }\n        return quadruplets;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"4sum","has_notes":false,"flag_type":1}