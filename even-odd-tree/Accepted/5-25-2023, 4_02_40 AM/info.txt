{"id":956732877,"lang":"cpp","lang_name":"C++","time":"6 months, 2 weeks","timestamp":1684967560,"status":10,"status_display":"Accepted","runtime":"297 ms","url":"/submissions/detail/956732877/","is_pending":"Not Pending","title":"Even Odd Tree","memory":"150.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isEvenOddTree(TreeNode* root) {\n       queue<TreeNode*> q;\n       q.push(root);\n       int levels=0;\n       while(!q.empty()){\n           int n=q.size(),maximum=INT_MAX,minimum=INT_MIN;\n           for(int i=1;i<=n;i++){\n               if(q.front()->left)\n               q.push(q.front()->left);\n               if(q.front()->right)\n               q.push(q.front()->right);\n               int value=q.front()->val;\n               if(levels%2==0){\n                   if(value<=minimum || value%2==0)\n                   return(false);\n                   minimum=value;\n               }\n               else{\n                   if(value>=maximum || value%2!=0)\n                   return(false);\n                   maximum=value;\n               }\n               q.pop();\n           }\n           levels++;\n       }\n       return(true); \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"even-odd-tree","has_notes":false,"flag_type":1}