{"id":958233265,"lang":"cpp","lang_name":"C++","time":"6 months, 2 weeks","timestamp":1685189619,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/958233265/","is_pending":"Not Pending","title":"Find Bottom Left Tree Value","memory":"21.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int findBottomLeftValue(TreeNode* root) {\n        int leftmost;\n        queue<TreeNode*> q;\n        q.push(root);\n        while(!q.empty()){\n            int n=q.size();\n            for(int i=1;i<=n;i++){\n                if(q.front()->left)\n                q.push(q.front()->left);\n                if(q.front()->right)\n                q.push(q.front()->right);\n                if(i==1)\n                leftmost=q.front()->val;\n                q.pop();\n            }\n        }\n        return(leftmost);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-bottom-left-tree-value","has_notes":false,"flag_type":1}