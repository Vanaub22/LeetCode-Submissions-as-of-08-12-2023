{"id":953719973,"lang":"cpp","lang_name":"C++","time":"6 months, 3 weeks","timestamp":1684561246,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/953719973/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"9.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void invert(TreeNode* root){\n        if(!root)\n        return;\n        swap(root->left,root->right);\n        invert(root->left);\n        invert(root->right);\n    }\n    TreeNode* invertTree(TreeNode* root) {\n        invert(root);\n        return(root);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree","has_notes":false,"flag_type":1}