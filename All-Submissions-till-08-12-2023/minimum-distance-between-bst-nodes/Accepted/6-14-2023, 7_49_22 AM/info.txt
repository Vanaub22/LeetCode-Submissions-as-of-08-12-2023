{"id":970744676,"lang":"cpp","lang_name":"C++","time":"5 months, 3 weeks","timestamp":1686709162,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/970744676/","is_pending":"Not Pending","title":"Minimum Distance Between BST Nodes","memory":"9.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void dfs(TreeNode* root, vector<int>& preorder){\n        if(!root)\n        return;\n        dfs(root->left,preorder);\n        preorder.push_back(root->val);\n        dfs(root->right,preorder);\n    }\n    int minDiffInBST(TreeNode* root) {\n        vector<int> preorder;\n        dfs(root,preorder);\n        int minimum=INT_MAX,n=preorder.size();\n        for(int i=0;i<n-1;i++)\n        minimum=min(minimum,preorder[i+1]-preorder[i]);\n        return(minimum); \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"minimum-distance-between-bst-nodes","has_notes":false,"flag_type":1}