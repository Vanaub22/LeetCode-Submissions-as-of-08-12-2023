{"id":971496920,"lang":"cpp","lang_name":"C++","time":"5 months, 3 weeks","timestamp":1686790061,"status":10,"status_display":"Accepted","runtime":"231 ms","url":"/submissions/detail/971496920/","is_pending":"Not Pending","title":"Maximum Level Sum of a Binary Tree","memory":"107.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxLevelSum(TreeNode* root) {\n        int level=0,max_level_sum=INT_MIN,level_no;\n        queue<TreeNode*> q;\n        q.push(root);\n        while(!q.empty()){\n            int n=q.size(),level_sum=0;\n            for(int i=1;i<=n;i++){\n                if(q.front()->left)\n                q.push(q.front()->left);\n                if(q.front()->right)\n                q.push(q.front()->right);\n                level_sum+=q.front()->val;\n                q.pop();\n            }\n            level++;\n            if(level_sum>max_level_sum){\n                max_level_sum=level_sum;\n                level_no=level;\n            }\n        }\n        return(level_no);\n    }\n};","compare_result":"1111111111111111111111111111111111111111","title_slug":"maximum-level-sum-of-a-binary-tree","has_notes":false,"flag_type":1}