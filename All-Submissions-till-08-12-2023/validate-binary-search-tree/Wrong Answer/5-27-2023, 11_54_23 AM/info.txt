{"id":958080828,"lang":"cpp","lang_name":"C++","time":"6 months, 2 weeks","timestamp":1685168663,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/958080828/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isValidBST(TreeNode* root) {\n        if(!root)\n        return(true);\n        bool check=true;\n        if(root->left)\n        check=root->val>root->left->val;\n        if(root->right)\n        check=root->val<root->right->val;\n        return(check && isValidBST(root->left) && isValidBST(root->right));\n    }\n};","compare_result":"1111111111110010010011111111111111111111101111111011111111111111111111111011111001","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}