{"id":958084352,"lang":"cpp","lang_name":"C++","time":"6 months, 2 weeks","timestamp":1685169129,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/958084352/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"21.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> inorder;\n    void inorderTraversal(TreeNode* root){\n        if(!root)\n        return;\n        inorderTraversal(root->left);\n        inorder.push_back(root->val);\n        inorderTraversal(root->right);\n    }\n    bool isValidBST(TreeNode* root) {\n        inorderTraversal(root);\n        for(int i=0;i<inorder.size()-1;i++)\n        if(inorder[i]>=inorder[i+1])\n        return(false);\n        return(true);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}