{"id":1090857741,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1699042290,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1090857741/","is_pending":"Not Pending","title":"Minimum Cost to Move Chips to The Same Position","memory":"7.7 MB","code":"    // There are only two cases here (can be proved):\n    // 1. We move all the chips to an even position.\n    // 2. We move all the chips to an odd position.\n    // A single jump costs 1 while a double jump costs 2.\n    // For moving to any odd position, cost from other odd positions will be 0 and that from other even positions will be 1.\n    // Similarly for an even position, moving costs from other even positions will be 0 while that of odd positions will be 1.\n    // The answer will simply be the minimum of the two aforementioned costs.\nclass Solution {\npublic:\n    int minCostToMoveChips(vector<int>& positions) {\n        int even_pos,odd_pos=even_pos=0;\n        for(int& position:positions) if(position%2==0) even_pos++;\n        else odd_pos++;\n        return min(odd_pos,even_pos);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"minimum-cost-to-move-chips-to-the-same-position","has_notes":false,"flag_type":1}