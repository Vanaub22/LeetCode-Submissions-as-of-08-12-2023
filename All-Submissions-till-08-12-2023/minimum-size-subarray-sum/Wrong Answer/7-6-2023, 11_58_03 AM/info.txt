{"id":987540411,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1688624883,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/987540411/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"N/A","code":"class Solution {\npublic:\n    int minSubArrayLen(int target, vector<int>& nums) {\n        int n=nums.size(),left=0,right=0,sum=0,minLength=n;\n        for(;right<n;right++){\n            sum+=nums[right];\n            while(sum>target){\n                sum-=nums[left];\n                left++;\n            }\n            if(sum>=target) minLength=min(minLength,right-left+1);\n        }\n        return(minLength==n?0:minLength);\n    }\n};","compare_result":"11100110011100011000","title_slug":"minimum-size-subarray-sum","has_notes":false,"flag_type":1}