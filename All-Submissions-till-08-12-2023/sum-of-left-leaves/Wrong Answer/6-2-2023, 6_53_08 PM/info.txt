{"id":962341511,"lang":"cpp","lang_name":"C++","time":"6 months, 1 week","timestamp":1685712188,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/962341511/","is_pending":"Not Pending","title":"Sum of Left Leaves","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void dfs_leftSum(TreeNode* root,int& sum){\n        if(!root)\n        return;\n        if(root->left)\n        sum+=root->left->val;\n        dfs_leftSum(root->left,sum);\n        dfs_leftSum(root->right,sum);\n    }\n    int sumOfLeftLeaves(TreeNode* root) {\n        int sum=0;\n        dfs_leftSum(root,sum);\n        return(sum);\n    }\n};","compare_result":"1111100101010000010000000000000001111010110000110000101100000000000000010110000000000000110000101100","title_slug":"sum-of-left-leaves","has_notes":false,"flag_type":1}