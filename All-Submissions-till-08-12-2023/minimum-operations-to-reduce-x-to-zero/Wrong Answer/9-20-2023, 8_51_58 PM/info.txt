{"id":1054619797,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1695223318,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1054619797/","is_pending":"Not Pending","title":"Minimum Operations to Reduce X to Zero","memory":"N/A","code":"class Solution {\npublic:\n    // using sliding window approach\n    int minOperations(vector<int>& nums, int x) {\n        int left=0,right=0,maxLength=-1,n=nums.size(),reqdSum=accumulate(nums.begin(),nums.end(),0)-x,subArraySum=0;\n        while(left<n && right<n){\n            while(subArraySum<reqdSum && right<n){\n                subArraySum+=nums[right];\n                right++;\n            }\n            if(subArraySum==reqdSum) maxLength=max(maxLength,right-left);\n            subArraySum-=nums[left];\n            left++;\n        }\n        return maxLength==-1?-1:n-maxLength;\n    }\n};","compare_result":"1111111111111110111111111111111111111111111111111111111111111111111111111111111111111111111011","title_slug":"minimum-operations-to-reduce-x-to-zero","has_notes":false,"flag_type":1}