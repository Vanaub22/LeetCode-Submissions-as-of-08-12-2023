{"id":1023710090,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1692255279,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1023710090/","is_pending":"Not Pending","title":"01 Matrix","memory":"N/A","code":"class Solution {\npublic:\n    int nearestZero(int dist, int i, int j, int m, int n, vector<vector<int>>& mat){\n        if(mat[i][j]==0) return dist;\n        if(i>0) return nearestZero(dist+1,i-1,j,m,n,mat);\n        else if(j>0) return nearestZero(dist+1,i,j-1,m,n,mat);\n        else if(i<m-1) return nearestZero(dist+1,i+1,j,m,n,mat);\n        else return nearestZero(dist+1,i,j+1,m,n,mat);\n    }\n    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {\n        int m=mat.size(),n=mat[0].size();\n        vector<vector<int>> result(m,vector<int>(n,0));\n        for(int i=0;i<m;i++)\n        for(int j=0;j<n;j++)\n        result[i][j]=mat[i][j]==0?0:nearestZero(0,i,j,m,n,mat);\n        return result;\n    }\n};","compare_result":"11111100000000000000000000000000000000000000000000","title_slug":"01-matrix","has_notes":false,"flag_type":1}