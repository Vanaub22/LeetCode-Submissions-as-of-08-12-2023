{"id":968362269,"lang":"cpp","lang_name":"C++","time":"5 months, 4 weeks","timestamp":1686431172,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/968362269/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"N/A","code":"class Solution {\npublic:\n    void generateCombinations(string digits, int idx, unordered_map<char,vector<char>>& numLetters, string& combination, vector<string>& combinations){\n        if(idx==digits.size()){\n            combinations.push_back(combination);\n            return;\n        }\n        char num=digits[idx];\n        vector<char> letters=numLetters[num];\n        for(char c:letters){\n            combination+=c;\n            generateCombinations(digits,idx+1,numLetters,combination,combinations);\n            combination.pop_back();\n        }\n    }\n    vector<string> letterCombinations(string digits) {\n        vector<string> combinations;\n        if(digits==\"\")\n        return(combinations);\n        string combination=\"\";\n        unordered_map<char,vector<char>> numLetters={{'2',{'a','b','c'}},{'3',{'d','e','f'}},{'3',{'g','h','i'}},{'4',{'j','k','l'}},{'5',{'m','n','o'}},{'6',{'p','q','r'}},{'7',{'p','q','r','s'}},{'8',{'t','u','v'}},{'9',{'w','x','y','z'}}};\n        generateCombinations(digits,0,numLetters,combination,combinations);\n        return(combinations);\n    }\n};","compare_result":"1111000111101000001010101","title_slug":"letter-combinations-of-a-phone-number","has_notes":false,"flag_type":1}