{"id":947287076,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1683643812,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/947287076/","is_pending":"Not Pending","title":"Spiral Matrix","memory":"N/A","code":"class Solution {\npublic:\n    int direction(int dir,int r,int c,int r_lim_lo,int r_lim_hi,int c_lim_lo,int c_lim_hi){\n        if(r==r_lim_lo && c==c_lim_lo)\n        return 1;\n        else if(r==r_lim_lo && c==c_lim_hi)\n        return 2;\n        else if(r==r_lim_hi && c==c_lim_hi)\n        return 3;\n        else if(r==r_lim_hi && c==c_lim_lo)\n        return 4;\n        else\n        return(dir);\n    }\n    vector<int> spiralOrder(vector<vector<int>>& matrix) {\n        int m=matrix.size(),n=matrix[0].size();\n        vector<int> spiral;\n        int dir=1,row=0,col=0,r_lim_lo=0,r_lim_hi=m-1,c_lim_lo=0,c_lim_hi=n-1;\n        for(int i=1;i<=m*n;i++){\n            spiral.push_back(matrix[row][col]);\n            if(dir!=direction(dir,row,col,r_lim_lo,r_lim_hi,c_lim_lo,c_lim_hi)){\n                dir=direction(dir,row,col,r_lim_lo,r_lim_hi,c_lim_lo,c_lim_hi);\n                if(row==r_lim_lo && col==c_lim_hi)\n                ++r_lim_lo;\n                else if(row==r_lim_hi && col==c_lim_hi)\n                --c_lim_hi;\n                else if(row==r_lim_hi && col==c_lim_lo)\n                --r_lim_hi;\n                else if(row==r_lim_lo && col==c_lim_lo)\n                ++c_lim_lo;\n            }\n            if(dir==1)\n            if(col!=n-1)\n            ++col;\n            else\n            ++row;\n            else if(dir==2)\n            if(row!=m-1)\n            ++row;\n            else\n            --col;\n            else if(dir==3)\n            if(col!=0)\n            --col;\n            else\n            --row;\n            else\n            --row;\n        }\n        return(spiral);\n    }\n};","compare_result":"11111111111101000111010","title_slug":"spiral-matrix","has_notes":false,"flag_type":1}