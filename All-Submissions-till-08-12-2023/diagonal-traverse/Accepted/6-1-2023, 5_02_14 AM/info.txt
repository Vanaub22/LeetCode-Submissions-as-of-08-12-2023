{"id":961267612,"lang":"cpp","lang_name":"C++","time":"6 months, 1 week","timestamp":1685575934,"status":10,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/961267612/","is_pending":"Not Pending","title":"Diagonal Traverse","memory":"18.4 MB","code":"class Solution {\npublic:\n    vector<int> findDiagonalOrder(vector<vector<int>>& mat) {\n        vector<int> diagonals;\n        int m=mat.size(),n=mat[0].size();\n        for(int i=0;i<m;i++){\n            int row=i,col=0;\n            if(row%2!=0){\n                while(row>0&&col<n-1){\n                    row--;\n                    col++;\n                }\n                while(row<=i&&col>=0)\n                diagonals.push_back(mat[row++][col--]);\n            }\n            else\n            while(row>=0&&col<n)\n            diagonals.push_back(mat[row--][col++]);\n        }\n        for(int i=1;i<n;i++){\n            int col=i,row=m-1;\n            if((m%2!=0 && col%2!=0) || (m%2==0 && col%2==0)){\n                while(row>0&&col<n-1){\n                    row--;\n                    col++;\n                }\n                while(row<=m-1&&col>=i)\n                diagonals.push_back(mat[row++][col--]);\n            }\n            else\n            while(row>=0&&col<n)\n            diagonals.push_back(mat[row--][col++]);\n        }\n        return(diagonals);\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"diagonal-traverse","has_notes":false,"flag_type":1}