{"id":957545095,"lang":"cpp","lang_name":"C++","time":"6 months, 2 weeks","timestamp":1685085419,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/957545095/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"11.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> rightSideView(TreeNode* root) {\n        vector<int> rightView;\n        queue<TreeNode*> q;\n        if(!root)\n        return(rightView);\n        q.push(root);\n        while(!q.empty()){\n            int n=q.size();\n            for(int i=1;i<=n;i++){\n                if(q.front()->left)\n                q.push(q.front()->left);\n                if(q.front()->right)\n                q.push(q.front()->right);\n                if(i==n)\n                rightView.push_back(q.front()->val);\n                q.pop();\n            }\n        }\n        return(rightView);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view","has_notes":false,"flag_type":1}