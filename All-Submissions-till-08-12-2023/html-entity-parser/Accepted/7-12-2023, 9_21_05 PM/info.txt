{"id":992789335,"lang":"cpp","lang_name":"C++","time":"4 months, 4 weeks","timestamp":1689177065,"status":10,"status_display":"Accepted","runtime":"76 ms","url":"/submissions/detail/992789335/","is_pending":"Not Pending","title":"HTML Entity Parser","memory":"18.9 MB","code":"class Solution {\npublic:\n    string entityParser(string text) {\n        unordered_map<string,string> specialCharacters={{\"&quot;\",\"\\\"\"},{\"&apos;\",\"'\"},{\"&amp;\",\"&\"},{\"&gt;\",\">\"},{\"&lt;\",\"<\"},{\"&frasl;\",\"/\"}};\n        int n=text.length();\n        string ans=\"\";\n        for(int i=0;i<n;i++){\n            if(text[i]=='&'){\n                int initial=i;\n                string entity=\"\";\n                while(i<n){\n                    entity+=text[i];\n                    if(text[i]==';') break;\n                    i++;\n                }\n                if(specialCharacters[entity]!=\"\"){\n                    ans+=specialCharacters[entity];\n                    continue;\n                }\n                else i=initial;\n            }\n            ans+=text[i];\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"html-entity-parser","has_notes":false,"flag_type":1}