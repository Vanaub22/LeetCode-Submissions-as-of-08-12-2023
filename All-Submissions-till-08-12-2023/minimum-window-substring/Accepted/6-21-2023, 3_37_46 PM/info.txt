{"id":976249433,"lang":"cpp","lang_name":"C++","time":"5 months, 2 weeks","timestamp":1687342066,"status":10,"status_display":"Accepted","runtime":"86 ms","url":"/submissions/detail/976249433/","is_pending":"Not Pending","title":"Minimum Window Substring","memory":"8.6 MB","code":"class Solution {\npublic:\n    bool check(unordered_map<char,int>& s_freq,unordered_map<char,int>& t_freq){\n        for(auto it:t_freq)\n        if(s_freq[it.first]<it.second)\n        return(false);\n        return(true);\n    }\n    string minWindow(string s, string t) {\n        int m=s.length(),n=t.length();\n        if(m<n)\n        return(\"\");\n        if(s==t)\n        return(s);\n        string ans=\"\";\n        unordered_map<char,int> t_freq,s_freq;\n        for(char c:t)\n        t_freq[c]++;\n        int left=0,right=0,len=INT_MAX;\n        while(right<m){\n            s_freq[s[right]]++;\n            while(left<right){\n                if(t_freq[s[left]]==0 || s_freq[s[left]]>t_freq[s[left]]){\n                    s_freq[s[left]]--;\n                    left++;\n                }\n                else\n                break;\n            }\n            if(check(s_freq,t_freq)){\n                if(len>right-left+1){\n                    len=right-left+1;\n                    ans=s.substr(left,len);\n                }\n                s_freq[s[left]]--;\n                left++;\n            }\n            right++;\n        }\n        return(ans);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-window-substring","has_notes":false,"flag_type":1}