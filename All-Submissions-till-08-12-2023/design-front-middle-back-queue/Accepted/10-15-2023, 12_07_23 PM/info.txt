{"id":1075647838,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1697351843,"status":10,"status_display":"Accepted","runtime":"26 ms","url":"/submissions/detail/1075647838/","is_pending":"Not Pending","title":"Design Front Middle Back Queue","memory":"21.2 MB","code":"class FrontMiddleBackQueue {\npublic:\n    // Using 2 Dequeues for O(1) Operations\n    deque<int> dq_first,dq_second;\n    // For every Push and Pop Operation, I have adjusted and made the length as equal as possible for the 2 Dequeues (Maximum Permissible Size Difference = 1)\n    void adjustLength() {\n        if(dq_first.size()==dq_second.size() || dq_first.size()==dq_second.size()+1) return;\n        if(dq_first.size()>dq_second.size()) {\n            int popped=dq_first.back();\n            dq_first.pop_back();\n            dq_second.push_front(popped);\n        }\n        else {\n            int popped=dq_second.front();\n            dq_second.pop_front();\n            dq_first.push_back(popped);\n        }\n    }\n    void pushFront(int val) {\n        dq_first.push_front(val);\n        adjustLength();\n    }\n    void pushMiddle(int val) {\n        if(dq_first.size()==dq_second.size()) dq_first.push_back(val);\n        else {\n            int popped=dq_first.back();\n            dq_first.pop_back();\n            dq_first.push_back(val);\n            dq_second.push_front(popped);\n        }\n    }\n    void pushBack(int val) {\n        dq_second.push_back(val);\n        adjustLength();\n    }\n    int popFront() {\n        if(dq_first.empty()) return -1;\n        int popped=dq_first.front();\n        dq_first.pop_front();\n        adjustLength();\n        return popped;\n    }\n    int popMiddle() {\n        if(dq_first.empty()) return -1;\n        int popped=dq_first.back();\n        dq_first.pop_back();\n        adjustLength();\n        return popped;\n    }\n    int popBack() {\n        if(dq_second.empty()) {\n            if(dq_first.empty()) return -1;\n            else {\n                int popped=dq_first.back();\n                dq_first.pop_back();\n                return popped;\n            }\n        }\n        int popped=dq_second.back();\n        dq_second.pop_back();\n        adjustLength();\n        return popped;\n    }\n};\n/**\n * Your FrontMiddleBackQueue object will be instantiated and called as such:\n * FrontMiddleBackQueue* obj = new FrontMiddleBackQueue();\n * obj->pushFront(val);\n * obj->pushMiddle(val);\n * obj->pushBack(val);\n * int param_4 = obj->popFront();\n * int param_5 = obj->popMiddle();\n * int param_6 = obj->popBack();\n */","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"design-front-middle-back-queue","has_notes":false,"flag_type":1}