{"id":938459926,"lang":"cpp","lang_name":"C++","time":"7 months, 2 weeks","timestamp":1682257981,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/938459926/","is_pending":"Not Pending","title":"Reorder List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    void reorderList(ListNode* head) {\n        if(!head->next)\n        return;\n        map<int,ListNode*> mp;\n        deque<ListNode*> dq;\n        ListNode *temp=head;\n        while(temp){\n            dq.push_back(temp);\n            temp=temp->next;\n        }\n        temp=dq.front();\n        dq.pop_front();\n        bool i=true;\n        while(!dq.empty()){\n            if(i){\n                temp->next=dq.back();\n                dq.pop_back();\n            }\n            else{\n                temp->next=dq.front();\n                dq.pop_front();\n            }\n            temp=temp->next;\n            temp->next=NULL;\n        }\n    }\n};","compare_result":"001110000000","title_slug":"reorder-list","has_notes":false,"flag_type":1}