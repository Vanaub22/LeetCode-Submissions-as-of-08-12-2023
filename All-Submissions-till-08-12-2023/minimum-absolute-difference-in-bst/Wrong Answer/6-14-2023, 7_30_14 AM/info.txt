{"id":970736538,"lang":"cpp","lang_name":"C++","time":"5 months, 3 weeks","timestamp":1686708014,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/970736538/","is_pending":"Not Pending","title":"Minimum Absolute Difference in BST","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void dfs(int& minimum, TreeNode* root){\n        if(!root || (!root->left && !root->right))\n        return;\n        if(!root->left && root->right)\n        minimum=min(minimum,root->right->val-root->val);\n        else if(root->left && !root->right)\n        minimum=min(minimum,root->val-root->left->val);\n        else\n        minimum=min(minimum,min((root->val-root->left->val),(root->right->val-root->val)));\n        dfs(minimum,root->left);\n        dfs(minimum,root->right);\n    }\n    int getMinimumDifference(TreeNode* root) {\n        int minimum=INT_MAX;\n        dfs(minimum,root);\n        return(minimum);\n    }\n};","compare_result":"111111111111111111010010101101111110001111101111110001100110001100101101101111011110111011011101011111111110101010011000101010101101111011111111111111111001100111010000001001110010111010111","title_slug":"minimum-absolute-difference-in-bst","has_notes":false,"flag_type":1}