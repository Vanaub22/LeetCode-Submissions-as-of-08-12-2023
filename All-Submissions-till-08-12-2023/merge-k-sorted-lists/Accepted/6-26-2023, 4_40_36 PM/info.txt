{"id":979966825,"lang":"cpp","lang_name":"C++","time":"5 months, 2 weeks","timestamp":1687777836,"status":10,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/979966825/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"13.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeKLists(vector<ListNode*>& lists) {\n        vector<int> fullList;\n        for(ListNode* list:lists)\n        while(list){\n            fullList.push_back(list->val);\n            list=list->next;\n        }\n        int n=fullList.size();\n        if(n==0)\n        return(NULL);\n        sort(fullList.begin(),fullList.end());\n        ListNode* head=new ListNode(fullList[0]),*curr=head;\n        for(int i=1;i<n;i++){\n            ListNode* node=new ListNode(fullList[i]);\n            curr->next=node;\n            curr=curr->next;\n        }\n        return(head);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-k-sorted-lists","has_notes":false,"flag_type":1}