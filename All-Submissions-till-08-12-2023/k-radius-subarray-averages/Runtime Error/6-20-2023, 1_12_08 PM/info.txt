{"id":975381365,"lang":"cpp","lang_name":"C++","time":"5 months, 2 weeks","timestamp":1687246928,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/975381365/","is_pending":"Not Pending","title":"K Radius Subarray Averages","memory":"N/A","code":"class Solution {\npublic:\n    vector<int> getAverages(vector<int>& nums, int k) {\n        if(k==0)\n        return(nums);\n        int n=nums.size(),prefsum=0,suffsum=0;\n        vector<int> krad_avg(n);\n        vector<long long int> prefthree(n),suffthree(n);\n        if(k>=n){\n            fill(krad_avg.begin(),krad_avg.end(),-1);\n            return(krad_avg);\n        }\n        for(int i=0;i<k;i++){\n            prefsum+=nums[i];\n            suffsum+=nums[n-i-1];\n            krad_avg[i]=-1;\n            krad_avg[n-i-1]=-1;\n        }\n        for(int i=k;i<n-k;i++){\n            prefthree[i]=prefsum+nums[i];\n            prefsum+=(nums[i]-nums[i-k]);\n        }    \n        for(int i=n-k-1;i>=k;i--){\n            suffthree[i]=suffsum;\n            suffsum+=(nums[i]-nums[i+k]);\n        }\n        for(int i=k;i<n-k;i++){\n            long long int sum=prefthree[i]+suffthree[i];\n            krad_avg[i]=floor((int)(sum/(2*k+1)));\n        }\n        return(krad_avg);\n    }\n};","compare_result":"111111111111111111111111111110000000000","title_slug":"k-radius-subarray-averages","has_notes":false,"flag_type":1}