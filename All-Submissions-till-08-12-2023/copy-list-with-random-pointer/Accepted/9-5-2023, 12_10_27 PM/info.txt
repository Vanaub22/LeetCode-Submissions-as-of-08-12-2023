{"id":1040976514,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1693896027,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1040976514/","is_pending":"Not Pending","title":"Copy List with Random Pointer","memory":"11.3 MB","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    Node* next;\n    Node* random;\n    Node(int _val) {\n        val = _val;\n        next = NULL;\n        random = NULL;\n    }\n};\n*/\nclass Solution {\npublic: \n    Node* copyRandomList(Node* head) {\n        unordered_map<Node*,Node*> nodeMapping;\n        Node* iter=head;\n        while(iter){\n            nodeMapping[iter]=new Node(iter->val);\n            iter=iter->next;\n        }\n        iter=head;\n        while(iter){\n            nodeMapping[iter]->next=nodeMapping[iter->next];\n            nodeMapping[iter]->random=nodeMapping[iter->random];\n            iter=iter->next;\n        }\n        return nodeMapping[head];\n    }\n};","compare_result":"1111111111111111111","title_slug":"copy-list-with-random-pointer","has_notes":false,"flag_type":1}