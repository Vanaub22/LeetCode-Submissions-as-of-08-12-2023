{"id":1091545097,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1699130600,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/1091545097/","is_pending":"Not Pending","title":"Decode the Message","memory":"7.4 MB","code":"class Solution {\npublic:\n    // Simple Application of HashMap\n    string decodeMessage(string key, string message) {\n        unordered_map<char,char> subs; // Substitution Table\n        char x='a';\n        // If character doesn't exist in the substitution table, just add it\n        for(char c:key) if(c!=' ' && subs.find(c)==subs.end()) subs[c]=x++;\n        string decoded=\"\";\n        // Get decoded message by substituting from table wherever possible\n        for(char c:message) if(c==' ' || subs.find(c)==subs.end()) decoded+=c;\n        else decoded+=subs[c];\n        return decoded;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"decode-the-message","has_notes":false,"flag_type":1}