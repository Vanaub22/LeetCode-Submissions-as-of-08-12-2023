{"id":944819115,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1683272151,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/944819115/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"8.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    //using the recursive approach\n    vector<int> traversal;\n    void preorder(TreeNode* root){\n        if(root==NULL)\n        return;\n        else{\n            traversal.push_back(root->val);\n            preorder(root->left);\n            preorder(root->right);\n        }\n    }\n    vector<int> preorderTraversal(TreeNode* root) {\n        if(root==NULL)\n        return(traversal);\n        else{\n            preorder(root);\n            return(traversal);\n        }\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-preorder-traversal","has_notes":false,"flag_type":1}