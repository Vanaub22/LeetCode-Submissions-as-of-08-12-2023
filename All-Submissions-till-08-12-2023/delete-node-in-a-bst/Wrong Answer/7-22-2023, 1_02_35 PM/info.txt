{"id":1000724886,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1690011155,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1000724886/","is_pending":"Not Pending","title":"Delete Node in a BST","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* deleteNode(TreeNode* root, int key) {\n        if(!root || (!root->left && !root->right)) return nullptr;\n        if(root->val<key) deleteNode(root->right,key);\n        else if(root->val>key) deleteNode(root->left,key);\n        else{\n            if(!root->left || !root->right) return root->left?root->left:root->right;\n            else{\n                TreeNode* succ=root->right;\n                while(succ->left) succ=succ->left;\n                root->val=succ->val;\n                root->right=deleteNode(root->right,succ->val);\n            }\n        }\n        return root;\n    }\n};","compare_result":"11110100100101010010001000110001110111000000110110000000000010010001000010000001000010000011","title_slug":"delete-node-in-a-bst","has_notes":false,"flag_type":1}