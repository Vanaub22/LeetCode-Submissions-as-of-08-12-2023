{"id":1053104354,"lang":"java","lang_name":"Java","time":"2 months, 2 weeks","timestamp":1695086628,"status":10,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/1053104354/","is_pending":"Not Pending","title":"Find the Duplicate Number","memory":"56.9 MB","code":"class Solution {\n    // trying to solve using constant extra space\n    public int findDuplicate(int[] nums) {\n        int low=1,high=nums.length-1,mid;\n        while(low<=high){\n            mid=low+(high-low)/2;\n            int cnt=0;\n            for(int i:nums) if(i<=mid) cnt++; // number of elements lesser than or equal to mid\n            // technically, mid should have mid elements lesser than equal to mid\n            if(cnt>mid) high=mid-1; // repeated integer is smaller than or equal to mid\n            else low=mid+1; // repeated integer is greater than or equal to mid\n        }\n        return low;\n    }       \n}","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"find-the-duplicate-number","has_notes":false,"flag_type":1}