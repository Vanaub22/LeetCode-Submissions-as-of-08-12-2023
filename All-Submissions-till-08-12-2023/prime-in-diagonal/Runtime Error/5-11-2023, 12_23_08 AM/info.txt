{"id":948017711,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1683744788,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/948017711/","is_pending":"Not Pending","title":"Prime In Diagonal","memory":"N/A","code":"class Solution {\npublic:\n    //using the Sieve of Eratosthenes to find primes in O(sqrt(n)) time\n    void Sieve(vector<bool> isPrime){\n        for(int i=2;i<isPrime.size();i++){\n            if(isPrime[i])\n            for(int j=i*i;j<isPrime.size();j++)\n            isPrime[j]=false;\n        }\n    }\n    int diagonalPrime(vector<vector<int>>& m) {\n        set<int> diagonal_elements;\n        int n=m.size();\n        for(int i=0;i<n;i++){\n            diagonal_elements.insert(m[i][i]);\n            diagonal_elements.insert(m[i][n-i-1]);\n        }\n        set<int>::iterator it=diagonal_elements.end();\n        vector<bool> isPrime(*(it)+1,true);\n        Sieve(isPrime); \n        while(--it!=diagonal_elements.begin()){\n            if(isPrime[*it])\n            break;\n        }\n        return(*it);\n    }\n};","compare_result":"110000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"prime-in-diagonal","has_notes":false,"flag_type":1}