{"id":1047025412,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1694483058,"status":10,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/1047025412/","is_pending":"Not Pending","title":"Minimum Deletions to Make Character Frequencies Unique","memory":"17.6 MB","code":"class Solution {\npublic:\n    int minDeletions(string s) {\n        unordered_map<char,int> freq;\n        for(char c:s) freq[c]++;\n        int deletions=0;\n        set<int> usedFreq;\n        for(auto it:freq){\n            int f=it.second;\n            while(f && usedFreq.find(f)!=usedFreq.end()){\n                deletions++;\n                f--;\n            }\n            if(f) usedFreq.insert(f);\n        }\n        return deletions;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-deletions-to-make-character-frequencies-unique","has_notes":false,"flag_type":1}