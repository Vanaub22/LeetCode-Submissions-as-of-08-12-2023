{"id":950627860,"lang":"cpp","lang_name":"C++","time":"6 months, 3 weeks","timestamp":1684134163,"status":10,"status_display":"Accepted","runtime":"708 ms","url":"/submissions/detail/950627860/","is_pending":"Not Pending","title":"Swapping Nodes in a Linked List","memory":"180 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* swapNodes(ListNode* head, int k) {\n        if(head->next==NULL)\n        return(head);\n        ListNode *temp=head,*node1,*node2;\n        int n=1,i=0;\n        while(temp){\n            temp=temp->next;\n            n++;\n        }\n        k=k%n;\n        temp=head;\n        while(temp){\n            i++;\n            if(i==k)\n            node1=temp;\n            if(i==n-k)\n            node2=temp;\n            temp=temp->next;\n        }\n        swap(node1->val,node2->val);\n        return(head);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"swapping-nodes-in-a-linked-list","has_notes":false,"flag_type":1}