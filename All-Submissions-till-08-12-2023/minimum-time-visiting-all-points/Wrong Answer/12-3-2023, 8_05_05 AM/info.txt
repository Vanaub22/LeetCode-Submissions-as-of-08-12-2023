{"id":1111180222,"lang":"java","lang_name":"Java","time":"4 days, 13 hours","timestamp":1701570905,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1111180222/","is_pending":"Not Pending","title":"Minimum Time Visiting All Points","memory":"N/A","code":"class Solution {\n    public int minTimeToVisitAllPoints(int[][] points) {\n        int start[]=points[0],time=0;\n        for(int point[]:points) time+=travelTime(start,point);\n        return time;\n    }\n    // For optimal time, we will move diagonally first and reach the reqd. row / column\n    // After that we will move horizontally / vertically to reach the exact point\n    int travelTime(int start[], int point[]) {\n        int t=0;\n        // Move diagonally first\n        while(start[0]!=point[0] && start[1]!=point[1]) {\n            if(start[0]<point[0]) start[0]++;\n            else start[0]--;\n            if(start[1]<point[1]) start[1]++;\n            else start[1]--;\n            t++;\n        }\n        // We will have to move to move horizontally / vertically for the rest of the path\n        return t+Math.abs(start[0]-point[0])+Math.abs(start[1]-point[1]);\n    }\n}","compare_result":"11000000000000000000000001000000000000000000000000000100000000000000000000000001000000000000000000000000000000000000000000","title_slug":"minimum-time-visiting-all-points","has_notes":false,"flag_type":1}