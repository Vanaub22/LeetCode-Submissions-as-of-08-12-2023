{"id":1000495933,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1689975607,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1000495933/","is_pending":"Not Pending","title":"Second Minimum Node In a Binary Tree","memory":"7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int minVal;\n    long long secondMin=LONG_LONG_MAX;\n    void dfs(TreeNode* root){\n        if(!root || root->val>secondMin) return;\n        if(root->val>minVal && root->val<secondMin){\n            secondMin=root->val;\n            return;\n        }\n        dfs(root->left);\n        dfs(root->right);\n    }\n    int findSecondMinimumValue(TreeNode* root) {\n        minVal=root->val;\n        dfs(root);\n        return secondMin==LONG_LONG_MAX?-1:secondMin;\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"second-minimum-node-in-a-binary-tree","has_notes":false,"flag_type":1}