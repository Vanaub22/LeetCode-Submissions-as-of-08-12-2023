{"id":1032366411,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1693064429,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1032366411/","is_pending":"Not Pending","title":"Combination Sum II","memory":"10.6 MB","code":"class Solution {\npublic:\n    void findCombinations(int idx, int target, vector<int>& candidates, vector<int>& combination, vector<vector<int>>& combinations){\n        if(target==0){\n            combinations.push_back(combination);\n            return;\n        }\n        int n=candidates.size();\n        for(int i=idx;i<n;i++){\n            if(i>idx && candidates[i]==candidates[i-1]) continue;\n            if(candidates[i]>target) break;\n            combination.push_back(candidates[i]);\n            findCombinations(i+1,target-candidates[i],candidates,combination,combinations);\n            combination.pop_back();\n        }\n    }\n    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {\n        sort(candidates.begin(),candidates.end());\n        vector<vector<int>> combinations;\n        vector<int> combination;\n        findCombinations(0,target,candidates,combination,combinations);\n        return combinations;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum-ii","has_notes":false,"flag_type":1}