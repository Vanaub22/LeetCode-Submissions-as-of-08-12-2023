{"id":930574827,"lang":"cpp","lang_name":"C++","time":"8Â months","timestamp":1681021987,"status":10,"status_display":"Accepted","runtime":"61 ms","url":"/submissions/detail/930574827/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"18 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {\n        set<ListNode*> nodeAddresses;\n        ListNode *temp=headA,*intersection=NULL;\n        while(temp){\n            nodeAddresses.insert(temp);\n            temp=temp->next;\n        }\n        temp=headB;\n        while(temp){\n            if(nodeAddresses.find(temp)!=nodeAddresses.end()){\n                intersection=temp;\n                break;\n            }\n            temp=temp->next;\n        }\n        return(intersection);\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"intersection-of-two-linked-lists","has_notes":false,"flag_type":1}