{"id":985092114,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1688368246,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/985092114/","is_pending":"Not Pending","title":"Buddy Strings","memory":"N/A","code":"class Solution {\npublic:\n    bool buddyStrings(string s, string goal) {\n        if(s.length()!=goal.length()) return false;\n        else if(s==goal){\n            unordered_map<int,int> freq;\n            for(char c:s){\n                if(freq[c]==1) return true;\n                freq[c]++;\n            }\n            return false;\n        }\n        else{\n            int firstIndex=-1,secondIndex=-1,n=s.length();\n            for(int i=0;i<n;i++)\n            if(s[i]!=goal[i]){\n                if(firstIndex==-1 && secondIndex==-1) firstIndex=i;\n                else if(secondIndex==-1 && firstIndex!=-1) secondIndex=i;\n                else return false;\n            }\n            return(firstIndex!=-1 && secondIndex!=-1 && s[firstIndex]!=s[secondIndex]);\n        }\n        return true;\n    }\n};","compare_result":"1111110111011111111111111111100111","title_slug":"buddy-strings","has_notes":false,"flag_type":1}