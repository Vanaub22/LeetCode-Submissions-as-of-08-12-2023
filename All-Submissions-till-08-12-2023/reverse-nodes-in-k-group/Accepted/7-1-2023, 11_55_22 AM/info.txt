{"id":983536933,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1688192722,"status":10,"status_display":"Accepted","runtime":"18 ms","url":"/submissions/detail/983536933/","is_pending":"Not Pending","title":"Reverse Nodes in k-Group","memory":"12 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseKGroup(ListNode* head, int k) {\n        int count=0;\n        ListNode* temp=head;\n        while(temp){\n            temp=temp->next;\n            count++;\n        }\n        if(count<=1 || k>count)\n        return(head);\n        temp=head;\n        ListNode* new_head;\n        int reversals=count/k,i=0;\n        while(i<reversals){\n            stack<int> stk;\n            ListNode* ans=temp;\n            for(int j=0;j<k;j++){\n                stk.push(temp->val);\n                temp=temp->next;\n            }\n            if(i==0)\n            new_head=ans;\n            i++;\n            while(!stk.empty()){\n                ans->val=stk.top();\n                stk.pop();\n                ans=ans->next;\n            }\n        }\n        return(new_head);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"reverse-nodes-in-k-group","has_notes":false,"flag_type":1}