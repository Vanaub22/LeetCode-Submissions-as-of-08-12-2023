{"id":946212432,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1683484541,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/946212432/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"12 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {\n        vector<vector<int>> z_order;\n        if(!root)\n        return(z_order);\n        queue<TreeNode*> Q;\n        Q.push(root);\n        z_order.push_back({root->val});\n        int step=0;\n        while(!Q.empty()){\n            ++step;\n            int n=Q.size();\n            vector<int> level;\n            for(int i=1;i<=n;i++){\n                if(Q.front()->left){\n                    level.push_back(Q.front()->left->val);\n                    Q.push(Q.front()->left);\n                }\n                if(Q.front()->right){\n                    level.push_back(Q.front()->right->val);\n                    Q.push(Q.front()->right);\n                }\n                Q.pop();\n            }\n            if(level.size()){\n                if(step%2)\n                reverse(level.begin(),level.end());\n                z_order.push_back(level);\n            }\n        }\n        return(z_order);\n    }\n};","compare_result":"111111111111111111111111111111111","title_slug":"binary-tree-zigzag-level-order-traversal","has_notes":false,"flag_type":1}