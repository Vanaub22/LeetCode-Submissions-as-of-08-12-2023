{"id":954685421,"lang":"cpp","lang_name":"C++","time":"6 months, 2 weeks","timestamp":1684696768,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/954685421/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"13.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<TreeNode*> traversal;\n    void preorder(TreeNode* root){\n        if(!root)\n        return;\n        traversal.push_back(root);\n        preorder(root->left);\n        preorder(root->right);\n    }\n    void flatten(TreeNode* root) {\n        if(!root)\n        return;\n        preorder(root);\n        int i,n=traversal.size();\n        for(i=0;i<n-1;i++){\n            traversal[i]->left=NULL;\n            traversal[i]->right=traversal[i+1];\n        }\n        traversal[i]->right=NULL;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flatten-binary-tree-to-linked-list","has_notes":false,"flag_type":1}