{"id":1070235886,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1696780228,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1070235886/","is_pending":"Not Pending","title":"Game of Life","memory":"7.3 MB","code":"class Solution {\npublic:\n    void gameOfLife(vector<vector<int>>& board) {\n        int m=board.size(),n=board[0].size();\n        vector<vector<int>> initial_board=board;\n        for(int i=0;i<m;i++)\n        for(int j=0;j<n;j++) {\n            int liveNeighbours=findLiveNeighbours(i,j,m,n,initial_board);\n            if(board[i][j]==1 && (liveNeighbours<2 || liveNeighbours>3)) board[i][j]=0;\n            else if(board[i][j]==0 && liveNeighbours==3) board[i][j]=1;\n        }\n    }\n    int findLiveNeighbours(int i, int j, int m, int n, vector<vector<int>>& board) {\n        int liveNeighbours=0;\n        if(i-1>=0 && board[i-1][j]) liveNeighbours++;\n        if(i+1<m && board[i+1][j]) liveNeighbours++;\n        if(j-1>=0 && board[i][j-1]) liveNeighbours++;\n        if(j+1<n && board[i][j+1]) liveNeighbours++;\n        if(i-1>=0 && j-1>=0 && board[i-1][j-1]) liveNeighbours++;\n        if(i-1>=0 && j+1<n && board[i-1][j+1]) liveNeighbours++;\n        if(i+1<m && j-1>=0 && board[i+1][j-1]) liveNeighbours++;\n        if(i+1<m && j+1<n && board[i+1][j+1]) liveNeighbours++;\n        return liveNeighbours;\n    }\n};","compare_result":"1111111111111111111111","title_slug":"game-of-life","has_notes":false,"flag_type":1}