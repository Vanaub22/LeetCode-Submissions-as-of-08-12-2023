{"id":973173214,"lang":"cpp","lang_name":"C++","time":"5 months, 3 weeks","timestamp":1686987187,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/973173214/","is_pending":"Not Pending","title":"Smallest String Starting From Leaf","memory":"19.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    string smallestFromLeaf(TreeNode* root) {\n        string result=\"~\";\n        buildStrings(root,\"\",result);\n        return(result);\n    }\n    void buildStrings(TreeNode* root, string s, string& result){\n        if(!root)\n        return;\n        s+=((char)('a'+root->val));\n        if(!root->right && !root->left){\n            string r=s;\n            reverse(r.begin(),r.end());\n            if(r<result)\n            result=r;\n            return;\n        }\n        buildStrings(root->left,s,result);\n        buildStrings(root->right,s,result);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"smallest-string-starting-from-leaf","has_notes":false,"flag_type":1}