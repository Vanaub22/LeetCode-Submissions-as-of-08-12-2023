{"id":1072128513,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1696969826,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1072128513/","is_pending":"Not Pending","title":"Minimum Number of Operations to Make Array Continuous","memory":"N/A","code":"class Solution {\npublic:\n    int minOperations(vector<int> nums) {\n        int n=nums.size(),minimum_ops=n;\n        // Need Sorted Array with no duplicates\n        set<int>uniq(nums.begin(),nums.end());\n        nums=vector<int>(uniq.begin(),uniq.end());\n        // Using Sliding Window Approach\n        // Worst Case Max. operations = n (All elements are to be changed)\n        int left=0,right=0;\n        for(;left<n;left++) {\n            // Finding contiguous, valid (i.e. continuous) subarray\n            while(right<n && nums[right]-nums[left]<n) right++;\n            minimum_ops=min(minimum_ops,n-(right-left));\n        }\n        return minimum_ops;\n    }\n};","compare_result":"11111000000000000000000000000000000000000000000000000000000000","title_slug":"minimum-number-of-operations-to-make-array-continuous","has_notes":false,"flag_type":1}