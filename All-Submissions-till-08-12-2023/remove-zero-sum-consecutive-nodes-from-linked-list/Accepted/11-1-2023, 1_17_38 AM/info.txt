{"id":1088620250,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1698781658,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1088620250/","is_pending":"Not Pending","title":"Remove Zero Sum Consecutive Nodes from Linked List","memory":"11.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* removeZeroSumSublists(ListNode* head) {\n        map<int,ListNode*> pref;\n        // Attaching one extra node so that the reference is not lost even if the head node is removed\n        ListNode* extra=new ListNode(0,head),*temp=extra;\n        int prefSum=0;\n        while(temp) {\n            prefSum+=temp->val;\n            pref[prefSum]=temp; // Eventually gets the last node with that Prefix Sum\n            temp=temp->next;\n        }\n        temp=extra,prefSum=0;\n        while(temp) {\n            prefSum+=temp->val;\n            temp->next=pref[prefSum]->next;\n            temp=temp->next;\n        }\n        return extra->next;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-zero-sum-consecutive-nodes-from-linked-list","has_notes":false,"flag_type":1}