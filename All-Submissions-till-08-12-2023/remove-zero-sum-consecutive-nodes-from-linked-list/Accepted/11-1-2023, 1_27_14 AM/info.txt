{"id":1088625723,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1698782234,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1088625723/","is_pending":"Not Pending","title":"Remove Zero Sum Consecutive Nodes from Linked List","memory":"43.3 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode removeZeroSumSublists(ListNode head) {\n        Map<Integer,ListNode> pref=new HashMap<>();\n        // Adding an extra node so that the reference is not lost if the head node is deleted\n        int prefSum=0;\n        ListNode extra=new ListNode(0,head),temp=extra;\n        // Calculating Prefix Sums and linking them to corresponding nodes\n        while(temp!=null) {\n            prefSum+=temp.val;\n            pref.put(prefSum,temp); // Eventually gets to the last node with that prefix sum\n            temp=temp.next;\n        }\n        prefSum=0;\n        temp=extra;\n        while(temp!=null) {\n            prefSum+=temp.val;\n            temp.next=pref.get(prefSum).next; // Deleting all 0-sum nodes in between\n            temp=temp.next;\n        }\n        return extra.next;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-zero-sum-consecutive-nodes-from-linked-list","has_notes":false,"flag_type":1}