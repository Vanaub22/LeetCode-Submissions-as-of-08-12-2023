{"id":932674233,"lang":"cpp","lang_name":"C++","time":"7 months, 4 weeks","timestamp":1681325440,"status":10,"status_display":"Accepted","runtime":"324 ms","url":"/submissions/detail/932674233/","is_pending":"Not Pending","title":"Merge In Between Linked Lists","memory":"95.1 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeInBetween(ListNode* list1, int a, int b, ListNode* list2) {\n        int i=1;\n        ListNode *prev,*extra,*temp=list1,*rest;\n        while(i<=a){\n            i++;\n            prev=temp;\n            temp=temp->next;\n        }\n        prev->next=list2;\n        while(i<=b){\n            i++;\n            prev=temp;\n            temp=temp->next;\n            delete(prev);\n        }\n        rest=temp->next;\n        temp=list2;\n        while(temp->next){\n            temp=temp->next;            \n        }\n        temp->next=rest;\n        return(list1);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-in-between-linked-lists","has_notes":false,"flag_type":1}