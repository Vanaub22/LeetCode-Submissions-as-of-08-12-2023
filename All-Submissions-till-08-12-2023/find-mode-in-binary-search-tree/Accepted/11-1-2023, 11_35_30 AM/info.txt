{"id":1088896816,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1698818730,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/1088896816/","is_pending":"Not Pending","title":"Find Mode in Binary Search Tree","memory":"25.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void traversal(TreeNode* root, unordered_map<int,int>& freq) {\n        if(!root) return;\n        freq[root->val]++;\n        traversal(root->left,freq);\n        traversal(root->right,freq);\n    }\n    vector<int> findMode(TreeNode* root) {\n        unordered_map<int,int> freq;\n        traversal(root,freq);\n        vector<int> modes;\n        int maxFreq=-1;\n        for(auto it:freq) {\n            if(it.second>=maxFreq) {\n                if(it.second>maxFreq) {\n                    modes.clear();\n                    maxFreq=it.second;\n                }\n                modes.emplace_back(it.first);\n            }\n        }\n        return modes;\n    }\n};","compare_result":"11111111111111111111111","title_slug":"find-mode-in-binary-search-tree","has_notes":false,"flag_type":1}