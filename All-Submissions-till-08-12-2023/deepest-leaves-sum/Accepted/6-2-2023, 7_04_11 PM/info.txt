{"id":962347184,"lang":"cpp","lang_name":"C++","time":"6 months, 1 week","timestamp":1685712851,"status":10,"status_display":"Accepted","runtime":"122 ms","url":"/submissions/detail/962347184/","is_pending":"Not Pending","title":"Deepest Leaves Sum","memory":"62.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int deepestLeavesSum(TreeNode* root) {\n        vector<int> level;\n        queue<TreeNode*> q;\n        q.push(root);\n        while(!q.empty()){\n            level.clear();\n            int n=q.size();\n            for(int i=1;i<=n;i++){\n                if(q.front()->left)\n                q.push(q.front()->left);\n                if(q.front()->right)\n                q.push(q.front()->right);\n                level.push_back(q.front()->val);\n                q.pop();\n            }\n        }\n        return(accumulate(level.begin(),level.end(),0));\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"deepest-leaves-sum","has_notes":false,"flag_type":1}