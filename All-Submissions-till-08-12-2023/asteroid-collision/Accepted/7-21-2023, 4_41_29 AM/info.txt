{"id":999744624,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1689894689,"status":10,"status_display":"Accepted","runtime":"21 ms","url":"/submissions/detail/999744624/","is_pending":"Not Pending","title":"Asteroid Collision","memory":"17.4 MB","code":"class Solution {\npublic:\n    bool isStable(vector<int>& state){\n        int n=state.size();\n        if(n<=1) return true;\n        if(state[n-1]>=0 && state[n-2]>=0 || state[n-1]<0 && state[n-2]<0 || state[n-1]>=0 && state[n-2]<0) return true;\n        return false;\n    }\n    void change(vector<int>& state){\n        int n=state.size(),val=max(abs(state[n-1]),abs(state[n-2])),sign=1;\n        if(abs(state[n-1])>abs(state[n-2])){ \n            if(state[n-1]<0) sign=-1;\n        }\n        else if(abs(state[n-1])<abs(state[n-2])){\n            if(state[n-2]<0) sign=-1;\n        }\n        else val=0;\n        val*=sign;\n        state.pop_back();\n        state.pop_back();\n        if(val!=0) state.push_back(val);\n    }\n    vector<int> asteroidCollision(vector<int>& asteroids) {\n        vector<int> state{asteroids[0]};\n        int n=asteroids.size();\n        for(int i=1;i<n;i++){\n            state.push_back(asteroids[i]);\n            while(!isStable(state)) change(state);\n        }\n        return state;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"asteroid-collision","has_notes":false,"flag_type":1}