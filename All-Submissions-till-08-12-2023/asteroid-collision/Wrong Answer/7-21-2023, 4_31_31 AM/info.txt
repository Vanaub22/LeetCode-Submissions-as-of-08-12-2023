{"id":999741231,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1689894091,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/999741231/","is_pending":"Not Pending","title":"Asteroid Collision","memory":"N/A","code":"class Solution {\npublic:\n    bool isStable(vector<int>& state){\n        int n=state.size();\n        if(n<=1) return true;\n        if(state[n-1]>=0 && state[n-2]>=0) return true;\n        else if(state[n-1]<0 && state[n-2]<0) return true;\n        else return false;\n    }\n    void change(vector<int>& state){\n        int n=state.size(),val=max(abs(state[n-1]),abs(state[n-2])),sign=1;\n        if(abs(state[n-1])>abs(state[n-2])){ \n            if(state[n-1]<0) sign=-1;\n        }\n        else if(abs(state[n-1])<abs(state[n-2])){\n            if(state[n-2]<0) sign=-1;\n        }\n        else val=0;\n        val*=sign;\n        state.pop_back();\n        state.pop_back();\n        if(val!=0) state.push_back(val);\n    }\n    vector<int> asteroidCollision(vector<int>& asteroids) {\n        vector<int> state{asteroids[0]};\n        for(int i=1;i<asteroids.size();i++){\n            state.push_back(asteroids[i]);\n            while(!isStable(state)) change(state);\n        }\n        return state;\n    }\n};","compare_result":"11101100110010001000110011000100000011000000100000001100000010000000110011001000100011001100010000000000110000000000000000000000000011001100100010001100110011111111110011111111111111111111111111111100110011111111111111111111111111111111111111111111111111111111100100000000000","title_slug":"asteroid-collision","has_notes":false,"flag_type":1}