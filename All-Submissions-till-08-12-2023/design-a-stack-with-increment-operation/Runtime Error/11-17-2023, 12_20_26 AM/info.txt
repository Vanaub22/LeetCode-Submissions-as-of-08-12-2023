{"id":1100284883,"lang":"cpp","lang_name":"C++","time":"2 weeks, 6 days","timestamp":1700160626,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1100284883/","is_pending":"Not Pending","title":"Design a Stack With Increment Operation","memory":"N/A","code":"class CustomStack {\npublic:\n    vector<int> stk;\n    int capacity,top;\n    CustomStack(int maxSize) {\n        top=-1;\n        capacity=maxSize;\n        stk=vector<int>(capacity,-1);\n    }\n    \n    void push(int x) {\n        if(top==capacity-1) return;\n        stk[top++]=x;\n    }\n    \n    int pop() {\n        if(top==-1) return -1;\n        int popped=stk[top];\n        stk[top--]=-1;\n        return popped;\n    }\n    \n    void increment(int k, int val) {\n        int idx=0;\n        while(idx<=k-1 && idx<=top) stk[idx++]+=val;\n    }\n};\n\n/**\n * Your CustomStack object will be instantiated and called as such:\n * CustomStack* obj = new CustomStack(maxSize);\n * obj->push(x);\n * int param_2 = obj->pop();\n * obj->increment(k,val);\n */","compare_result":"0000000000000000000000000000000000","title_slug":"design-a-stack-with-increment-operation","has_notes":false,"flag_type":1}