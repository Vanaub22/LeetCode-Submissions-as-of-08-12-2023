{"id":986225517,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1688484921,"status":10,"status_display":"Accepted","runtime":"84 ms","url":"/submissions/detail/986225517/","is_pending":"Not Pending","title":"Maximum Binary Tree","memory":"42.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* construct(int left, int right, vector<int>& nums){\n        if(left>right) return(NULL);\n        int max_idx=max_element(nums.begin()+left,nums.begin()+right+1)-nums.begin();\n        TreeNode* root=new TreeNode(nums[max_idx]);\n        root->left=construct(left,max_idx-1,nums);\n        root->right=construct(max_idx+1,right,nums);\n        return(root);\n    }\n    TreeNode* constructMaximumBinaryTree(vector<int>& nums) {\n        return(construct(0,nums.size()-1,nums));\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-binary-tree","has_notes":false,"flag_type":1}