{"id":1025230701,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1692395009,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1025230701/","is_pending":"Not Pending","title":"4Sum","memory":"N/A","code":"class Solution {\npublic:\n    vector<vector<int>> fourSum(vector<int>& nums, int target) {\n        int n=nums.size();\n        sort(nums.begin(),nums.end());\n        vector<vector<int>> quadruplets;\n        for(int i=0;i<n;i++){\n            if(i>0 && nums[i]==nums[i-1]) continue;\n            for(int j=i+1;j<n;j++){\n                if(j!=i+1 && nums[j]==nums[j-1]) continue;\n                int k=j+1,l=n-1;\n                while(k<l){\n                    int sum=nums[i]+nums[j]+nums[k]+nums[l];\n                    if(sum==target){ \n                        quadruplets.push_back({nums[i],nums[j],nums[k],nums[l]});\n                        break;\n                    }\n                    else if(sum<target) k++;\n                    else l--;\n                }\n            }\n        }\n        return quadruplets;\n    }\n};","compare_result":"11111111111111100011111111111111111111111111011111111101111111110111111111111111111101110111111111111111111111111110110000001111111010110100001000111101100100111000010000010001101010110001001111100100111100011000111101101111110111111111111111111111111111111111101110111111111111111110000000000","title_slug":"4sum","has_notes":false,"flag_type":1}