{"id":961769690,"lang":"cpp","lang_name":"C++","time":"6 months, 1 week","timestamp":1685637434,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/961769690/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"20.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int Height(TreeNode* root,int& diameter){\n        if(!root)\n        return(0);\n        int leftHeight=Height(root->left,diameter),rightHeight=Height(root->right,diameter);\n        diameter=max(diameter,leftHeight+rightHeight);\n        return(1+max(leftHeight,rightHeight));\n    }\n    int diameterOfBinaryTree(TreeNode* root) {\n        int diameter=0;\n        Height(root,diameter);\n        return(diameter);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree","has_notes":false,"flag_type":1}