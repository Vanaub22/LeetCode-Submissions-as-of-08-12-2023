{"id":1023422795,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1692222089,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1023422795/","is_pending":"Not Pending","title":"Generate Parentheses","memory":"11.4 MB","code":"class Solution {\npublic:\n    void backtracking_generate(int opening, int closing, int idx, int n, string& combination, vector<string>& combinations){\n        if(idx==n*2){\n            combinations.push_back(combination);\n            return;\n        }\n        if(opening<n && idx<n*2-1){\n            combination+=\"(\";\n            backtracking_generate(opening+1,closing,idx+1,n,combination,combinations);\n            combination.pop_back();\n        }\n        if(closing<opening && idx>0){\n            combination+=\")\";\n            backtracking_generate(opening,closing+1,idx+1,n,combination,combinations);\n            combination.pop_back();\n        }\n    }\n    vector<string> generateParenthesis(int n) {\n        vector<string> combinations;\n        string combination=\"\";\n        int idx=0;\n        backtracking_generate(0,0,idx,n,combination,combinations);\n        return combinations;\n    }\n};","compare_result":"11111111","title_slug":"generate-parentheses","has_notes":false,"flag_type":1}