{"id":973160286,"lang":"cpp","lang_name":"C++","time":"5 months, 3 weeks","timestamp":1686985688,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/973160286/","is_pending":"Not Pending","title":"Sum Root to Leaf Numbers","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void leafPathSum(TreeNode* root, int num, int& sum){\n        if(!root)\n        return;\n        num=(num*10)+root->val;\n        if(!root->left || !root->right){\n            sum+=num;\n            return;\n        }\n        leafPathSum(root->left,num,sum);\n        leafPathSum(root->right,num,sum);\n    }\n    int sumNumbers(TreeNode* root) {\n        int sum=0;\n        leafPathSum(root,0,sum);\n        return(sum);\n    }\n};","compare_result":"111101010000001000010000000011000010000000000100100000000000000000100000100000000000000000000000000000000000","title_slug":"sum-root-to-leaf-numbers","has_notes":false,"flag_type":1}