{"id":1021211948,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1692026055,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/1021211948/","is_pending":"Not Pending","title":"Linked List Random Node","memory":"16.7 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> values;\n    Solution(ListNode* head) {\n        ListNode* temp=head;\n        while(temp){\n            values.push_back(temp->val);\n            temp=temp->next;\n        }\n    }\n    int getRandom() {\n        return values[rand()%values.size()];\n    }\n};\n/**\n * Your Solution object will be instantiated and called as such:\n * Solution* obj = new Solution(head);\n * int param_1 = obj->getRandom();\n */","compare_result":"11111111","title_slug":"linked-list-random-node","has_notes":false,"flag_type":1}