{"id":1012684566,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1691221737,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1012684566/","is_pending":"Not Pending","title":"Delete Leaves With a Given Value","memory":"21.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void deleteTargetLeaves(TreeNode*& root, int target, bool& foundTarget){\n        foundTarget=false;\n        if(!root) return;\n        deleteTargetLeaves(root->left,target,foundTarget);\n        deleteTargetLeaves(root->right,target,foundTarget);\n        if(root && !root->left && !root->right && root->val==target){\n            foundTarget=true;\n            root=nullptr;\n        }\n    }\n    TreeNode* removeLeafNodes(TreeNode* root, int target) {\n        bool foundTarget=true;\n        while(foundTarget) deleteTargetLeaves(root,target,foundTarget);\n        return root;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"delete-leaves-with-a-given-value","has_notes":false,"flag_type":1}