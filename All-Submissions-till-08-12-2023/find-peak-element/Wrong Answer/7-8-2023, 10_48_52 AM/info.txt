{"id":989042662,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1688793532,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/989042662/","is_pending":"Not Pending","title":"Find Peak Element","memory":"N/A","code":"class Solution {\npublic:\n    int findPeakElement(vector<int>& nums) {\n        int start=0,end=nums.size()-1,mid=start+(end-start)/2;\n        if(end==0) return(end);\n        if(end==1) return(nums[start]>=nums[end]?start:end);\n        if(nums[start]>nums[start+1]) return(start);\n        if(nums[end]>nums[end-1]) return(end);\n        while(start<end){\n            if(end-start==1) return(nums[start]>=nums[end]?start:end);\n            if(nums[mid-1]<nums[mid] && nums[mid]>nums[mid+1]) return mid;\n            else if(nums[mid-1]>nums[mid] && nums[mid]>nums[mid+1]) end=mid-1;\n            else if(nums[mid-1]<nums[mid] && nums[mid]<nums[mid+1]) start=mid+1;\n            else end=mid+1;\n            mid=start+(end-start)/2;\n        }\n        return -1;\n    }\n};","compare_result":"111111111111111111111111111011111010111111111101101100001010001011","title_slug":"find-peak-element","has_notes":false,"flag_type":1}