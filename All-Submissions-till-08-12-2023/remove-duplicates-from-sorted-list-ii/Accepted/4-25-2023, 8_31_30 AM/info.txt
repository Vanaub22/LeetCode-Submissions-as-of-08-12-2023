{"id":939273248,"lang":"cpp","lang_name":"C++","time":"7 months, 2 weeks","timestamp":1682391690,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/939273248/","is_pending":"Not Pending","title":"Remove Duplicates from Sorted List II","memory":"11.8 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteDuplicates(ListNode* head) {\n        if(!head||!head->next)\n        return(head);\n        map<int,int> val_freq;\n        int unique_nodes=0;\n        ListNode* temp=head,*prev;\n        while(temp){\n            val_freq[temp->val]++;\n            temp=temp->next;\n        }\n        temp=head;\n        for(auto it:val_freq){\n            if(it.second==1){\n                temp->val=it.first;\n                prev=temp;\n                temp=temp->next;\n                unique_nodes++;\n            }\n        }\n        if(!unique_nodes)\n        return(NULL);\n        if(temp){\n            temp->next=NULL;\n            prev->next=temp->next;\n            delete(temp);\n        }\n        return(head);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-duplicates-from-sorted-list-ii","has_notes":false,"flag_type":1}