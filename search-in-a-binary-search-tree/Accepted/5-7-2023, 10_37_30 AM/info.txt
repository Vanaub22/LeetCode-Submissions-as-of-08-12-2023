{"id":945873952,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1683436050,"status":10,"status_display":"Accepted","runtime":"53 ms","url":"/submissions/detail/945873952/","is_pending":"Not Pending","title":"Search in a Binary Search Tree","memory":"34.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* searchBST(TreeNode* root, int val) {\n        if(!root || root->val==val)\n        return(root);\n        else if(root->val>val)\n        return(searchBST(root->left,val));\n        else\n        return(searchBST(root->right,val));\n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"search-in-a-binary-search-tree","has_notes":false,"flag_type":1}