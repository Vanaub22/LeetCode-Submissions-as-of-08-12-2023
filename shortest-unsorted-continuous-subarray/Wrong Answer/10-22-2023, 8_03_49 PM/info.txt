{"id":1081387615,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1697985229,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1081387615/","is_pending":"Not Pending","title":"Shortest Unsorted Continuous Subarray","memory":"N/A","code":"class Solution {\npublic:\n    // Two Pointer Approach\n    int findUnsortedSubarray(vector<int>& arr) {\n        // We will Sort and then Compare to find subarray that needs to be modified\n        int n=arr.size(),left=0,right=n-1;\n        vector<int> sorted_arr=arr;\n        // sort(sorted_arr.begin(),sorted_arr.end()); // Sorting the Copy\n        for(;left<n-1;left++) if(arr[left]>arr[left+1]) break; // Left Mismatch\n        for(;right>=1;right--) if(arr[right]<arr[right-1]) break; // Right Mismatch\n        return right>left?right-left+1:0;\n    }\n};","compare_result":"1111111101101011111001110000011100010101111101000000000000000000011101111101000000000000011101011101011101000000010101010101010101010101100011100000100111111010101110110100101001100010100010000001101000110101100000101000100010000000001001010000000000110000000010000010000001001101001000110101000000000001100","title_slug":"shortest-unsorted-continuous-subarray","has_notes":false,"flag_type":1}