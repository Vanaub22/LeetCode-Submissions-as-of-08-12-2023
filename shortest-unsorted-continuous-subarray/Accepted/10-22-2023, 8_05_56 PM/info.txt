{"id":1081388780,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1697985356,"status":10,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/1081388780/","is_pending":"Not Pending","title":"Shortest Unsorted Continuous Subarray","memory":"27.7 MB","code":"class Solution {\npublic:\n    // Two Pointer Approach to find out the length of the subarray that requires sorting\n    int findUnsortedSubarray(vector<int>& arr) {\n        // We will Sort and then Compare to find subarray that needs to be modified\n        int n=arr.size(),left=0,right=n-1;\n        vector<int> sorted_arr=arr; // Creating a copy for sorting\n        sort(sorted_arr.begin(),sorted_arr.end()); // Sorting the Copy\n        for(;left<n;left++) if(arr[left]!=sorted_arr[left]) break; // Left Mismatch\n        for(;right>=0;right--) if(arr[right]!=sorted_arr[right]) break; // Right Mismatch\n        return right>left?right-left+1:0; // right<=left implies that the array is sorted\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"shortest-unsorted-continuous-subarray","has_notes":false,"flag_type":1}