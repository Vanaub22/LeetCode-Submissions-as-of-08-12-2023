{"id":1068750217,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1696611604,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/1068750217/","is_pending":"Not Pending","title":"Course Schedule","memory":"N/A","code":"class Solution {\npublic:\n    // Using Kahn's Algorithm and Topological Sort using BFS for Cycle Detection\n    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {\n        int indegree(numCourses,0);\n        vector<int> adjList[numCourses];\n        // Calculating In-degrees and creating Adjacency List\n        for(vector<int>& prerequisite:prerequisites) {\n            adjList[prerequisite[0]].emplace_back(prerequisite[1]);\n            indegree[prerequisite[1]]++;\n        }\n        queue<int> q;\n        // Pushing in-degree = 0 vertices into queue\n        for(int i=0;i<numCourses;i++) if(indegree[i]==0) q.push(i);\n        int count=0; // to keep a count of vertices in Topological Sort\n        // Performing BFS\n        while(!q.empty()) {\n            int node=q.front();\n            count++;\n            q.pop();\n            for(int i:adjList[node]) {\n                indegree[i]--;\n                if(indegree[i]==0) q.push(i);\n            }   \n        }\n        return count==numCourses;\n    }\n};","compare_result":null,"title_slug":"course-schedule","has_notes":false,"flag_type":1}