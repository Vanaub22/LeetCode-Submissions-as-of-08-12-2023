{"id":1098489560,"lang":"cpp","lang_name":"C++","time":"3 weeks, 2 days","timestamp":1699947384,"status":10,"status_display":"Accepted","runtime":"255 ms","url":"/submissions/detail/1098489560/","is_pending":"Not Pending","title":"Unique Length-3 Palindromic Subsequences","memory":"30.8 MB","code":"class Solution {\npublic:\n    int countPalindromicSubsequence(string s) {\n        int count=0;\n        unordered_set<char> charSet;\n        // Finding out the unique characters in s\n        for(char c:s) charSet.insert(c);\n        for(char c:charSet) {\n            // For a Palindromic Subsequence of Length 3, the first and last letter must be the same\n            // Any other unique character in between will do\n            auto first_occ=s.find(c),last_occ=s.find_last_of(c);\n            if(first_occ!=string::npos && first_occ!=last_occ) {\n                string inBetween=s.substr(first_occ+1,last_occ-first_occ-1);\n                count+=unordered_set<char>(inBetween.begin(),inBetween.end()).size();\n            }\n        }\n        return count;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"unique-length-3-palindromic-subsequences","has_notes":false,"flag_type":1}