{"id":932098294,"lang":"cpp","lang_name":"C++","time":"7 months, 4 weeks","timestamp":1681240583,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/932098294/","is_pending":"Not Pending","title":"Rotate List","memory":"11.8 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* rotateRight(ListNode* head, int k) {\n        if(head==NULL)\n        return(NULL);\n        int n=0;\n        ListNode *temp=head,*end;\n        while(temp){\n            n++;\n            end=temp;\n            temp=temp->next;\n        }\n        k=k%n;\n        if(k==0)\n        return(head);\n        k=n-k;\n        temp=head;\n        ListNode *prev=head;\n        while(k){\n            k--;\n            prev=temp;\n            temp=temp->next;\n        }\n        prev->next=NULL;\n        end->next=head;\n        return(temp);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotate-list","has_notes":false,"flag_type":1}