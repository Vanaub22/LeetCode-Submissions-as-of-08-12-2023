{"id":1064600230,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1696222492,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1064600230/","is_pending":"Not Pending","title":"Reducing Dishes","memory":"8.2 MB","code":"class Solution {\npublic:\n    int maxSatisfaction(vector<int>& satisfaction) {\n        int n=satisfaction.size(),maxLikeCoeff=0;\n        sort(satisfaction.begin(),satisfaction.end());\n        // if last element after sorting is negative => entire array has negative elements\n        if(satisfaction[n-1]<0) return 0; // therefore, no dishes are prepared\n        for(int i=0;i<n;i++){\n            int likeCoeff=0;\n            for(int j=i;j<n;j++) likeCoeff+=satisfaction[j]*(j-i+1);\n            maxLikeCoeff=max(maxLikeCoeff,likeCoeff);\n        }\n        return maxLikeCoeff;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"reducing-dishes","has_notes":false,"flag_type":1}