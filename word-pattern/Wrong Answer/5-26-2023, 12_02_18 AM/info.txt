{"id":957263098,"lang":"cpp","lang_name":"C++","time":"6 months, 2 weeks","timestamp":1685039538,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/957263098/","is_pending":"Not Pending","title":"Word Pattern","memory":"N/A","code":"class Solution {\npublic:\n    bool wordPattern(string pattern, string s) {\n        vector<string> words;\n        set<string> uniqueWords;\n        unordered_map<char,string> umap;\n        s=\" \"+s+\" \";\n        int prev=1;\n        for(int i=2;i<s.length();i++)\n        if(s[i]==' '){\n            words.push_back(s.substr(prev,i-prev-1));\n            prev=i+1;\n        }\n        if(words.size()!=pattern.length())\n        return(false);\n        for(int i=0;i<pattern.length();i++)\n        if(umap[pattern[i]]==\"\")\n        umap[pattern[i]]=words[i];\n        else{\n            if(umap[pattern[i]]!=words[i])\n            return(false);\n        }\n        for(auto it:umap){\n            if(uniqueWords.find(it.second)!=uniqueWords.end())\n            return(false);\n            uniqueWords.insert(it.second);\n        }\n        return(true);\n    }\n};","compare_result":"11111111111000111110111111111111110111111","title_slug":"word-pattern","has_notes":false,"flag_type":1}