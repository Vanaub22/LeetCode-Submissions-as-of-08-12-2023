{"id":948056015,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1683749945,"status":10,"status_display":"Accepted","runtime":"136 ms","url":"/submissions/detail/948056015/","is_pending":"Not Pending","title":"Range Sum of BST","memory":"64.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int rangeSum=0;\n    void recSumTree(TreeNode* root,int low,int high){\n        if(!root)\n        return;\n        if(root->val>=low && root->val<=high)\n        rangeSum+=root->val;\n        recSumTree(root->left,low,high);\n        recSumTree(root->right,low,high);\n    }\n    int rangeSumBST(TreeNode* root,int low,int high) {\n        recSumTree(root,low,high);\n        return(rangeSum);\n    }\n};","compare_result":"11111111111111111111111111111111111111111","title_slug":"range-sum-of-bst","has_notes":false,"flag_type":1}