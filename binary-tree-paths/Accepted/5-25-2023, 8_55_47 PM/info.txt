{"id":957153998,"lang":"cpp","lang_name":"C++","time":"6 months, 2 weeks","timestamp":1685028347,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/957153998/","is_pending":"Not Pending","title":"Binary Tree Paths","memory":"13.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void dfs(TreeNode* root,vector<string>& paths,string path){\n        if(!root)\n        return;\n        if(!root->left && !root->right){\n            path+=to_string(root->val);\n            paths.push_back(path);\n            return;\n        }\n        else{\n            path+=(to_string(root->val)+\"->\");\n            dfs(root->left,paths,path);\n            dfs(root->right,paths,path);\n        }\n    }\n    vector<string> binaryTreePaths(TreeNode* root) {\n       vector<string> paths;\n       string path=\"\";\n       dfs(root,paths,path);\n       return(paths);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-paths","has_notes":false,"flag_type":1}