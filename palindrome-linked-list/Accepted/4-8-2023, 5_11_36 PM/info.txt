{"id":930108982,"lang":"cpp","lang_name":"C++","time":"8Â months","timestamp":1680954096,"status":10,"status_display":"Accepted","runtime":"277 ms","url":"/submissions/detail/930108982/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"128.2 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    bool isPalindrome(ListNode* head) {\n        ListNode* temp=head;\n        vector<int> dataList;\n        while(temp!=NULL){\n            dataList.push_back(temp->val);\n            temp=temp->next;\n        }\n        int n=dataList.size();\n        for(int i=0;i<n/2;i++)\n        if(dataList[i]!=dataList[n-i-1])\n        return(false);\n        return(true);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-linked-list","has_notes":false,"flag_type":1}