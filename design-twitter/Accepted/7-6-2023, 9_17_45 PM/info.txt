{"id":987897550,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1688658465,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/987897550/","is_pending":"Not Pending","title":"Design Twitter","memory":"7.3 MB","code":"class Twitter {\npublic:\n    unordered_map<int,unordered_map<int,bool>> isFollowing;\n    map<int,pair<int,int>,greater<int>> tweets;\n    int t=0;\n    void postTweet(int userId, int tweetId) {\n        tweets[t++]={userId,tweetId};\n    }\n    vector<int> getNewsFeed(int userId) {\n        vector<int> newsFeed;\n        for(auto it:tweets){\n            int tweeter=it.second.first;\n            if(tweeter==userId || isFollowing[userId][tweeter])\n            newsFeed.push_back(it.second.second);\n            if(newsFeed.size()>=10) break;\n        }\n        return newsFeed;\n    }\n    void follow(int followerId, int followeeId) {\n        isFollowing[followerId][followeeId]=true;\n    }\n    void unfollow(int followerId, int followeeId) {\n        isFollowing[followerId][followeeId]=false;\n    }\n};\n/**\n * Your Twitter object will be instantiated and called as such:\n * Twitter* obj = new Twitter();\n * obj->postTweet(userId,tweetId);\n * vector<int> param_2 = obj->getNewsFeed(userId);\n * obj->follow(followerId,followeeId);\n * obj->unfollow(followerId,followeeId);\n */","compare_result":"1111111111111111","title_slug":"design-twitter","has_notes":false,"flag_type":1}