{"id":930353238,"lang":"cpp","lang_name":"C++","time":"8Â months","timestamp":1680990804,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/930353238/","is_pending":"Not Pending","title":"Middle of the Linked List","memory":"7.2 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* middleNode(ListNode* head) {\n        if(!head->next)\n        return(head);\n        int nodeCount=0;\n        ListNode* temp=head;\n        while(temp){\n            temp=temp->next;\n            nodeCount++;\n        }\n        temp=head;\n        nodeCount/=2;\n        while(nodeCount--)\n        temp=temp->next;\n        return(temp);\n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"middle-of-the-linked-list","has_notes":false,"flag_type":1}