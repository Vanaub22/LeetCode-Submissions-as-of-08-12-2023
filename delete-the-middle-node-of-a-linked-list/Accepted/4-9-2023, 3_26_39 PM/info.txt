{"id":930657297,"lang":"cpp","lang_name":"C++","time":"8Â months","timestamp":1681034199,"status":10,"status_display":"Accepted","runtime":"1036 ms","url":"/submissions/detail/930657297/","is_pending":"Not Pending","title":"Delete the Middle Node of a Linked List","memory":"294.8 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteMiddle(ListNode* head) {\n        if(!head->next)\n        return(NULL);\n        int nodeCount=0;\n        ListNode* temp=head,*prev=head;\n        while(temp){\n            temp=temp->next;\n            nodeCount++;\n        }\n        temp=head;\n        nodeCount/=2;\n        while(nodeCount--){\n            prev=temp;\n            temp=temp->next;\n        }\n        prev->next=temp->next;\n        delete(temp);\n        return(head);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"delete-the-middle-node-of-a-linked-list","has_notes":false,"flag_type":1}