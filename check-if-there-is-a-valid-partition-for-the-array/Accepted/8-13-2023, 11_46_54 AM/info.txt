{"id":1019931660,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1691907414,"status":10,"status_display":"Accepted","runtime":"120 ms","url":"/submissions/detail/1019931660/","is_pending":"Not Pending","title":"Check if There is a Valid Partition For The Array","memory":"96.2 MB","code":"class Solution {\npublic:\n    bool isValidPartition(vector<int>& nums, int i, unordered_map<int,bool>& dp){\n        if(dp.find(i)!=dp.end()) return dp[i];\n        if(i>0 && nums[i]==nums[i-1] && isValidPartition(nums,i-2,dp)) return true;\n        if(i>1 && nums[i]==nums[i-1] && nums[i-1]==nums[i-2] && isValidPartition(nums,i-3,dp)) return true;\n        if(i>1 && nums[i]==nums[i-1]+1 && nums[i-1]==nums[i-2]+1 && isValidPartition(nums,i-3,dp)) return true;\n        return false;\n    }\n    bool validPartition(vector<int>& nums) {\n        unordered_map<int,bool> dp;\n        dp[-1]=true;\n        return isValidPartition(nums,nums.size()-1,dp);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"check-if-there-is-a-valid-partition-for-the-array","has_notes":false,"flag_type":1}