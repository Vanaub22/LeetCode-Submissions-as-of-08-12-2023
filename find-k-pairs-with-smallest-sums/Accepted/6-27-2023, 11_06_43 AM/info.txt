{"id":980569267,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1687844203,"status":10,"status_display":"Accepted","runtime":"307 ms","url":"/submissions/detail/980569267/","is_pending":"Not Pending","title":"Find K Pairs with Smallest Sums","memory":"114.2 MB","code":"class Solution {\npublic:\n    vector<vector<int>> kSmallestPairs(vector<int>& nums1, vector<int>& nums2, int k) {\n        int m=nums1.size(),n=nums2.size();\n        vector<vector<int>> kPairs;\n        priority_queue<pair<int,pair<int,int>>,vector<pair<int,pair<int,int>>>,greater<pair<int,pair<int,int>>>> pq;\n        set<pair<int,int>> visited;\n        pq.push({nums1[0]+nums2[0],{0,0}});\n        visited.insert({0,0});\n        while(k-- && !pq.empty()){\n            int i=pq.top().second.first,j=pq.top().second.second;\n            pq.pop();\n            kPairs.push_back({nums1[i],nums2[j]});\n            if(i+1<m && visited.find({i+1,j})==visited.end()){\n                pq.push({nums1[i+1]+nums2[j],{i+1,j}});\n                visited.insert({i+1,j});\n            }\n            if(j+1<n && visited.find({i,j+1})==visited.end()){\n                pq.push({nums1[i]+nums2[j+1],{i,j+1}});\n                visited.insert({i,j+1});\n            }\n        }\n        return(kPairs);\n    }\n};","compare_result":"11111111111111111111111111111111111","title_slug":"find-k-pairs-with-smallest-sums","has_notes":false,"flag_type":1}