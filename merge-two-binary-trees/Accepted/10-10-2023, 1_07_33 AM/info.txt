{"id":1071235646,"lang":"cpp","lang_name":"C++","time":"1 month, 4 weeks","timestamp":1696880253,"status":10,"status_display":"Accepted","runtime":"27 ms","url":"/submissions/detail/1071235646/","is_pending":"Not Pending","title":"Merge Two Binary Trees","memory":"33.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* mergeTrees(TreeNode* root1, TreeNode* root2) {\n        if(!root1) return root2;\n        if(!root2) return root1;\n        TreeNode* merged_root=new TreeNode(root1->val+root2->val);\n        merged_root->left=mergeTrees(root1->left,root2->left);\n        merged_root->right=mergeTrees(root1->right,root2->right);\n        return merged_root;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-binary-trees","has_notes":false,"flag_type":1}