{"id":976464502,"lang":"cpp","lang_name":"C++","time":"5 months, 2 weeks","timestamp":1687363984,"status":10,"status_display":"Accepted","runtime":"615 ms","url":"/submissions/detail/976464502/","is_pending":"Not Pending","title":"Find a Corresponding Node of a Binary Tree in a Clone of That Tree","memory":"163.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\n\nclass Solution {\npublic:\n    void simultaneousDFS(TreeNode* original_node, TreeNode* cloned_node, TreeNode* target, TreeNode*& dest){\n        if(!original_node)\n        return;\n        if(original_node==target){\n            dest=cloned_node;\n            return;\n        }\n        simultaneousDFS(original_node->left,cloned_node->left,target,dest);\n        simultaneousDFS(original_node->right,cloned_node->right,target,dest);\n    }\n    TreeNode* getTargetCopy(TreeNode* original, TreeNode* cloned, TreeNode* target) {\n        TreeNode* dest=NULL;\n        simultaneousDFS(original,cloned,target,dest);\n        return(dest);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree","has_notes":false,"flag_type":1}