{"id":951022765,"lang":"cpp","lang_name":"C++","time":"6 months, 3 weeks","timestamp":1684181689,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/951022765/","is_pending":"Not Pending","title":"Partition List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* partition(ListNode* head, int x) {\n        if(!head||!head->next)\n        return(head);\n        vector<int> nodeValues,lesser;\n        ListNode *temp=head;\n        int i=0,pivot_index=0,pos=0;\n        while(temp){\n            nodeValues.push_back(temp->val);\n            if(temp->val==x)\n            pivot_index=i;\n            temp=temp->next;\n            i++;\n        }\n        for(int i=pivot_index+1;i<nodeValues.size();i++)\n        if(nodeValues[i]<x){\n            lesser.push_back(nodeValues[i]);\n            nodeValues.erase(nodeValues.begin()+i);\n            i--;\n        }\n        for(int i=0;i<pivot_index;i++)\n        if(nodeValues[i]<=lesser[0] && nodeValues[i+1]>lesser[0]){\n            pos=i+1; \n            break;\n        }\n        nodeValues.insert(nodeValues.begin()+pos,lesser.begin(),lesser.end());\n        i=0;\n        temp=head;\n        while(temp){\n            temp->val=nodeValues[i++];\n            temp=temp->next;\n        }\n        return(head);\n    }\n};","compare_result":"111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"partition-list","has_notes":false,"flag_type":1}