{"id":956024577,"lang":"cpp","lang_name":"C++","time":"6 months, 2 weeks","timestamp":1684870840,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/956024577/","is_pending":"Not Pending","title":"Univalued Binary Tree","memory":"9.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isUnivalTree(TreeNode* root) {\n        if(!root || (!root->left && !root->right))\n        return(true);\n        bool rightCheck=true,leftCheck=true;\n        if(root->right)\n        rightCheck=(root->val==root->right->val);\n        if(root->left)\n        leftCheck=(root->val==root->left->val);\n        return(rightCheck && leftCheck && isUnivalTree(root->left) && isUnivalTree(root->right));\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"univalued-binary-tree","has_notes":false,"flag_type":1}