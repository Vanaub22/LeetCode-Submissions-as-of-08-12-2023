{"id":996135074,"lang":"cpp","lang_name":"C++","time":"4 months, 3 weeks","timestamp":1689535172,"status":10,"status_display":"Accepted","runtime":"45 ms","url":"/submissions/detail/996135074/","is_pending":"Not Pending","title":"Number of Islands","memory":"18.4 MB","code":"class Solution {\npublic:\n    void bfs(int row, int col, int m, int n, vector<vector<bool>>& visited, vector<vector<char>>& grid){\n        queue<pair<int,int>> q;\n        q.push({row,col});\n        visited[row][col]=true;\n        while(!q.empty()){\n            int r=q.front().first,c=q.front().second;\n            q.pop();\n            if(r>0 && grid[r-1][c]=='1' && !visited[r-1][c]){\n                visited[r-1][c]=true;\n                q.push({r-1,c});\n            }\n            if(r<m-1 && grid[r+1][c]=='1' && !visited[r+1][c]){\n                visited[r+1][c]=true;\n                q.push({r+1,c});\n            }\n            if(c>0 && grid[r][c-1]=='1' && !visited[r][c-1]){\n                visited[r][c-1]=true;\n                q.push({r,c-1});\n            }\n            if(c<n-1 && grid[r][c+1]=='1' && !visited[r][c+1]){\n                visited[r][c+1]=true;\n                q.push({r,c+1});\n            }\n        }\n    }\n    int numIslands(vector<vector<char>>& grid) {\n        int m=grid.size(),n=grid[0].size(),islands=0;\n        vector<vector<bool>> visited(m,vector<bool>(n,false));\n        for(int i=0;i<m;i++)\n        for(int j=0;j<n;j++)\n        if(grid[i][j]=='1' && !visited[i][j]){\n            islands++;\n            bfs(i,j,m,n,visited,grid);\n        }\n        return islands;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"number-of-islands","has_notes":false,"flag_type":1}