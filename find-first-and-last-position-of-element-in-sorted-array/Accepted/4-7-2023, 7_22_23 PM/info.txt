{"id":929636723,"lang":"cpp","lang_name":"C++","time":"8Â months","timestamp":1680875543,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/929636723/","is_pending":"Not Pending","title":"Find First and Last Position of Element in Sorted Array","memory":"13.6 MB","code":"class Solution {\npublic:\n    //modified binary search approach to find the first occurrence of target\n    int findFirst(vector<int>& nums,int target){\n        int start=0,end=nums.size()-1,mid=start+(end-start)/2,pos=-1;\n        while(start<=end){\n            if(nums[mid]==target){\n                pos=mid;\n                end=mid-1;\n            }\n            else if(target<nums[mid])\n            end=mid-1;\n            else\n            start=mid+1;\n            mid=start+(end-start)/2;\n        }\n        return(pos);\n    }\n    //modified binary search approach to find the last occurrence of target\n    int findLast(vector<int>& nums,int target){\n        int start=0,end=nums.size()-1,mid=start+(end-start)/2,pos=-1;\n        while(start<=end){\n            if(nums[mid]==target){\n                pos=mid;\n                start=mid+1;\n            }\n            else if(target<nums[mid])\n            end=mid-1;\n            else\n            start=mid+1;\n            mid=start+(end-start)/2;\n        }\n        return(pos);\n    }\n    vector<int> searchRange(vector<int>& nums, int target) {\n        return{findFirst(nums,target),findLast(nums,target)};\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-first-and-last-position-of-element-in-sorted-array","has_notes":false,"flag_type":1}