{"id":1053112394,"lang":"python3","lang_name":"Python3","time":"2 months, 2 weeks","timestamp":1695087664,"status":10,"status_display":"Accepted","runtime":"736 ms","url":"/submissions/detail/1053112394/","is_pending":"Not Pending","title":"Find the Duplicate Number","memory":"30.9 MB","code":"class Solution:\n    # solving using constant extra space\n    def findDuplicate(self, nums: List[int]) -> int:\n        low,high=1,len(nums)-1\n        while(low<=high):\n            mid=int(low+(high-low)/2)\n            cnt=0\n            # counting no. of elements lesser than or equal to mid\n            for i in nums:\n                if(i<=mid):\n                    cnt+=1\n            # technically, mid should have mid no. of elements lesser than or equal to mid\n            if(cnt<=mid):\n                low=mid+1\n            else:\n                high=mid-1\n        return low\n        ","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"find-the-duplicate-number","has_notes":false,"flag_type":1}