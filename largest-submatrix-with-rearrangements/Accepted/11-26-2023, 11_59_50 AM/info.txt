{"id":1106594019,"lang":"cpp","lang_name":"C++","time":"1 week, 4 days","timestamp":1700980190,"status":10,"status_display":"Accepted","runtime":"155 ms","url":"/submissions/detail/1106594019/","is_pending":"Not Pending","title":"Largest Submatrix With Rearrangements","memory":"74.8 MB","code":"class Solution {\npublic:\n    int largestSubmatrix(vector<vector<int>>& matrix) {\n        int maxSubArea=0,m=matrix.size(),n=matrix[0].size();\n        for(int i=0;i<m;i++) {\n            for(int j=0;j<n;j++) {\n                if(i==0 || matrix[i][j]==0) continue;\n                else matrix[i][j]+=matrix[i-1][j]; // Consecutive Ones\n            }\n            // Assuming this row to be the base row for submatrix\n            vector<int> baseRow=matrix[i];\n            sort(baseRow.begin(),baseRow.end(),greater<int>());\n            for(int j=0;j<n;j++) maxSubArea=max(maxSubArea,baseRow[j]*(j+1));\n        }\n        return maxSubArea;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"largest-submatrix-with-rearrangements","has_notes":false,"flag_type":1}