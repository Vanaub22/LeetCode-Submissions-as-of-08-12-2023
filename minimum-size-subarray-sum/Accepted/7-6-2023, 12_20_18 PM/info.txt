{"id":987556461,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1688626218,"status":10,"status_display":"Accepted","runtime":"49 ms","url":"/submissions/detail/987556461/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"28.1 MB","code":"class Solution {\npublic:\n    int minSubArrayLen(int target, vector<int>& nums) {\n        int n=nums.size(),left=0,right=0,sum=0,minLength=INT_MAX;\n        for(;right<n;right++){\n            sum+=nums[right];\n            while(sum>=target){\n                minLength=min(minLength,right-left+1);\n                sum-=nums[left];\n                left++;\n            }\n        }\n        return(minLength==INT_MAX?0:minLength);\n    }\n};","compare_result":"11111111111111111111","title_slug":"minimum-size-subarray-sum","has_notes":false,"flag_type":1}