{"id":957518480,"lang":"cpp","lang_name":"C++","time":"6 months, 2 weeks","timestamp":1685082148,"status":10,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/957518480/","is_pending":"Not Pending","title":"Binary Tree Tilt","memory":"24.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int dfs_sum(TreeNode* root,int sum){\n        if(!root)\n        return(sum);\n        return(root->val+dfs_sum(root->left,sum)+dfs_sum(root->right,sum));\n    }\n    int tilt(TreeNode* root){\n        return(abs(dfs_sum(root->left,0)-dfs_sum(root->right,0)));\n    }\n    int findTilt(TreeNode* root) {\n        if(!root ||(!root->left && !root->right))\n        return(0);\n        queue<TreeNode*> q;\n        int tiltSum=0;\n        q.push(root);\n        while(!q.empty()){\n            int n=q.size();\n            for(int i=1;i<=n;i++){\n                if(q.front()->left)\n                q.push(q.front()->left);\n                if(q.front()->right)\n                q.push(q.front()->right);\n                tiltSum+=tilt(q.front());\n                q.pop();\n            }\n        }\n        return(tiltSum);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-tilt","has_notes":false,"flag_type":1}