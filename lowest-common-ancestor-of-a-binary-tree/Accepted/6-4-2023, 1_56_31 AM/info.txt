{"id":963208597,"lang":"cpp","lang_name":"C++","time":"6Â months","timestamp":1685823991,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/963208597/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"14.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        if(!root || root==p || root==q)\n        return(root);\n        TreeNode* leftSide=lowestCommonAncestor(root->left,p,q),*rightSide=lowestCommonAncestor(root->right,p,q);\n        if(!leftSide || !rightSide)\n        return(rightSide?rightSide:leftSide);\n        return(root);\n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree","has_notes":false,"flag_type":1}