{"id":951357502,"lang":"cpp","lang_name":"C++","time":"6 months, 3 weeks","timestamp":1684233104,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/951357502/","is_pending":"Not Pending","title":"Implement Stack using Queues","memory":"6.9 MB","code":"class MyStack {\npublic:\n    queue<int> Q;\n    void push(int x) {\n        int n=Q.size();\n        if(n==0){\n            Q.push(x);\n            return;\n        }\n        queue<int> q;\n        q.push(x);\n        while(!Q.empty()){\n            q.push(Q.front());\n            Q.pop();\n        }\n        Q=q;\n    }\n    int pop() {\n        int popped=Q.front();\n        Q.pop();\n        return(popped);\n    }\n    int top() {\n        return(Q.front());\n    }\n    bool empty() {\n        return(Q.empty());\n    }\n};\n/**\n * Your MyStack object will be instantiated and called as such:\n * MyStack* obj = new MyStack();\n * obj->push(x);\n * int param_2 = obj->pop();\n * int param_3 = obj->top();\n * bool param_4 = obj->empty();\n */","compare_result":"11111111111111111","title_slug":"implement-stack-using-queues","has_notes":false,"flag_type":1}