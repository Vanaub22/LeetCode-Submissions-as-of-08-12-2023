{"id":1040748328,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1693869637,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1040748328/","is_pending":"Not Pending","title":"Maximum Average Subarray I","memory":"N/A","code":"class Solution {\npublic:\n    double findMaxAverage(vector<int>& nums, int k) {\n        int start=0,end=k-1,n=nums.size();\n        if(k==n) return accumulate(nums.begin(),nums.end(),0)/n;\n        double avg=(double)accumulate(nums.begin(),nums.begin()+k,0)/k,curr_avg=avg;\n        while(end<n){\n            end++;\n            curr_avg+=((double)nums[end]-nums[start])/k;\n            start++;\n            avg=max(avg,curr_avg);\n        }\n        return avg;\n    }\n};","compare_result":"1111110100101111111111111111111111111111111111111111111111111111111111111111110111111101111111111111111111111111111111111111111","title_slug":"maximum-average-subarray-i","has_notes":false,"flag_type":1}