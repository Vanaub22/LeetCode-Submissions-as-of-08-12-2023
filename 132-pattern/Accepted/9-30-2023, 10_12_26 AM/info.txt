{"id":1062759862,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1696048946,"status":10,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/1062759862/","is_pending":"Not Pending","title":"132 Pattern","memory":"47.1 MB","code":"class Solution {\npublic:\n    // using Monotonic Stack Approach\n    bool find132pattern(vector<int>& nums) {\n        // will be storing the elements in decreasing order (i.e. largest element at bottom)\n        // also the min. element before that point\n        stack<pair<int,int>> monostk;\n        int minimum=nums[0];\n        for(int i:nums) {\n            while(!monostk.empty() && i>=monostk.top().first) monostk.pop();\n            if(!monostk.empty() && i>monostk.top().second) return true;\n            monostk.push({i,minimum}); // minimum before this element\n            minimum=min(minimum,i);\n        }\n        return false;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"132-pattern","has_notes":false,"flag_type":1}