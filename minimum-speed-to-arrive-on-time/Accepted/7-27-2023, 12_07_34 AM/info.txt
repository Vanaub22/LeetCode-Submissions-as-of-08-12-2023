{"id":1004729963,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1690396654,"status":10,"status_display":"Accepted","runtime":"284 ms","url":"/submissions/detail/1004729963/","is_pending":"Not Pending","title":"Minimum Speed to Arrive on Time","memory":"101.4 MB","code":"class Solution {\npublic:\n    int minSpeedOnTime(vector<int>& distances, double timeLimit) {\n        int low=1,high=1e7,minimumSpeed=-1;\n        double mid=low+(high-low)/2;\n        while(low<=high){\n            if(getTime(distances,mid)<=timeLimit){\n                high=mid-1;\n                minimumSpeed=mid;\n            }\n            else low=mid+1;\n            mid=low+(high-low)/2;\n        }\n        return minimumSpeed;\n    }\n    double getTime(vector<int>& distances, double speed){\n        int n=distances.size();\n        double totalTime=0.0;\n        for(int i=0;i<n-1;i++) totalTime+=ceil(distances[i]/speed);\n        totalTime+=(double)distances[n-1]/speed;\n        return totalTime;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-speed-to-arrive-on-time","has_notes":false,"flag_type":1}