{"id":954608899,"lang":"cpp","lang_name":"C++","time":"6 months, 2 weeks","timestamp":1684687468,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/954608899/","is_pending":"Not Pending","title":"N-Queens","memory":"7.1 MB","code":"class Solution {\npublic:\n    bool isSafe(int r, int c, vector<string>& board, int n){\n        int row=r,col=c;\n        while(r>=0 && c>=0)\n        if(board[r--][c--]=='Q')\n        return(false);\n        r=row;\n        c=col;\n        while(c>=0)\n        if(board[r][c--]=='Q')\n        return(false);\n        c=col;\n        while(r<n && c>=0)\n        if(board[r++][c--]=='Q')\n        return(false);\n        return(true);\n    }\n    void solve(int col, vector<vector<string>>& ans, vector<string>& board, int n){\n        if(col==n){\n            ans.push_back(board);\n            return;\n        }\n        for(int row=0;row<n;row++)\n        if(isSafe(row,col,board,n)){\n            board[row][col]='Q';\n            solve(col+1,ans,board,n);\n            board[row][col]='.';\n        }\n    }\n    vector<vector<string>> solveNQueens(int n) {\n        vector<vector<string>> ans;\n        vector<string> board(n,string(n,'.'));\n        solve(0,ans,board,n);\n        return(ans);\n    }\n};","compare_result":"111111111","title_slug":"n-queens","has_notes":false,"flag_type":1}