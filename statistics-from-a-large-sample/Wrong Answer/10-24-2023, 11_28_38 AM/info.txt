{"id":1082746711,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1698127118,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1082746711/","is_pending":"Not Pending","title":"Statistics from a Large Sample","memory":"N/A","code":"class Solution {\npublic:\n    vector<double> sampleStats(vector<int>& count) {\n        int n=countElements(count);\n        return {findMin(count),findMax(count),findMean(count,n),findMedian(count,n),findMode(count)};\n    }\n    // Helper Functions for each task\n    double findMean(vector<int>& count, int n) {\n        long long sum=0;\n        for(int i=0;i<=255;i++) sum+=((long long)count[i]*i);\n        return (double)sum/n; \n    }\n    double findKthElement(vector<int>& count, int k) {\n        int i=0;\n        for(;i<=255;i++) if(k-count[i]<0) break;\n        else k-=count[i];\n        return i;\n    }\n    double findMedian(vector<int>& count, int n) {\n        int mid=n/2;\n        if(n%2!=0) return findKthElement(count,mid+1);\n        else return (findKthElement(count,mid)+findKthElement(count,mid-1))/2;\n    }\n    double findMode(vector<int>& count) {\n        int maxFreq=-1,mode=-1;\n        for(int i=0;i<=255;i++) if(maxFreq<count[i]) {\n            maxFreq=count[i];\n            mode=i;\n        }\n        return mode;\n    }\n    int countElements(vector<int>& count) {\n        int total=0;\n        for(int i:count) if(i!=0) total+=i;\n        return total;\n    }\n    double findMin(vector<int>& count) {\n        int i=0;\n        for(;i<=255;i++) if(count[i]!=0) break;\n        return i;\n    }\n    double findMax(vector<int>& count) {\n        int i=255;\n        for(;i>=0;i--) if(count[i]!=0) break;\n        return i;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111110","title_slug":"statistics-from-a-large-sample","has_notes":false,"flag_type":1}