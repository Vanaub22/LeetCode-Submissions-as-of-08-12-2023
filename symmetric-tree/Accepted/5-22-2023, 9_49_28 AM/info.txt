{"id":954862904,"lang":"cpp","lang_name":"C++","time":"6 months, 2 weeks","timestamp":1684729168,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/954862904/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"16.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool invertCheck(TreeNode* a, TreeNode* b){\n        if(!a && !b)\n        return(true);\n        if(!a || !b)\n        return(false);\n        return((a->val==b->val) && invertCheck(a->left,b->right) && invertCheck(a->right,b->left));\n    }\n    bool isSymmetric(TreeNode* root) {\n        return(invertCheck(root->left,root->right));\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false,"flag_type":1}