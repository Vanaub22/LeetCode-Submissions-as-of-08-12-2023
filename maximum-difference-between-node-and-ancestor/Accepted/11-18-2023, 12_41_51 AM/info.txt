{"id":1100987012,"lang":"cpp","lang_name":"C++","time":"2 weeks, 5 days","timestamp":1700248311,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1100987012/","is_pending":"Not Pending","title":"Maximum Difference Between Node and Ancestor","memory":"10.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int findMaxMinDiff(TreeNode* root, int maxVal, int minVal) {\n        if(!root) return maxVal-minVal;\n        maxVal=max(maxVal,root->val);\n        minVal=min(minVal,root->val);\n        return max(findMaxMinDiff(root->left,maxVal,minVal),findMaxMinDiff(root->right,maxVal,minVal));\n    }\n    int maxAncestorDiff(TreeNode* root) {\n        return findMaxMinDiff(root,root->val,root->val);\n    }\n};","compare_result":"1111111111111111111111111111","title_slug":"maximum-difference-between-node-and-ancestor","has_notes":false,"flag_type":1}