{"id":934561226,"lang":"cpp","lang_name":"C++","time":"7 months, 3 weeks","timestamp":1681625680,"status":10,"status_display":"Accepted","runtime":"770 ms","url":"/submissions/detail/934561226/","is_pending":"Not Pending","title":"Merge Nodes in Between Zeros","memory":"274.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeNodes(ListNode* head) {\n        ListNode *temp=head->next,*newNode,*newHead,*prev;\n        bool first=true;\n        int sum=0;\n        while(temp){\n            sum+=temp->val;\n            if(temp->val==0){\n                newNode=new ListNode(sum);\n                sum=0;\n                if(first){\n                    prev=newNode;\n                    newHead=newNode;\n                    first=false;\n                    }\n                else{\n                    prev->next=newNode;\n                    prev=newNode;\n                }\n            }\n            temp=temp->next;\n        }\n        return(newHead);\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"merge-nodes-in-between-zeros","has_notes":false,"flag_type":1}