{"id":1089209297,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1698853146,"status":10,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/1089209297/","is_pending":"Not Pending","title":"Linked List Components","memory":"22.2 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    int numComponents(ListNode* head, vector<int>& nums) {\n        set<int> values;\n        for(int i:nums) values.insert(i);\n        ListNode* temp=head;\n        bool connection=false;\n        int components=0;\n        while(temp) {\n            if(values.find(temp->val)!=values.end() && !connection) {\n                connection=true;\n                components++;            \n            }\n            else if(values.find(temp->val)==values.end() && connection) connection =false;\n            temp=temp->next;\n        }\n        return components;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"linked-list-components","has_notes":false,"flag_type":1}