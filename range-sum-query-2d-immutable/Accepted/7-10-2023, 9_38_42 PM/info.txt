{"id":991112103,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1689005322,"status":10,"status_display":"Accepted","runtime":"460 ms","url":"/submissions/detail/991112103/","is_pending":"Not Pending","title":"Range Sum Query 2D - Immutable","memory":"142.4 MB","code":"class NumMatrix {\npublic:\n    vector<vector<int>> prefSum;\n    NumMatrix(vector<vector<int>>& matrix) {\n        int m=matrix.size(),n=matrix[0].size();\n        prefSum=vector<vector<int>>(m+1,vector<int>(n+1,0));\n        for(int i=1;i<=m;i++)\n        for(int j=1;j<=n;j++)\n        prefSum[i][j]=prefSum[i-1][j]+prefSum[i][j-1]+matrix[i-1][j-1]-prefSum[i-1][j-1];\n    }\n    int sumRegion(int row1, int col1, int row2, int col2) {\n        return prefSum[row2+1][col2+1]-prefSum[row2+1][col1]-prefSum[row1][col2+1]+prefSum[row1][col1];\n    }\n};\n/**\n * Your NumMatrix object will be instantiated and called as such:\n * NumMatrix* obj = new NumMatrix(matrix);\n * int param_1 = obj->sumRegion(row1,col1,row2,col2);\n */","compare_result":"1111111111111111111111","title_slug":"range-sum-query-2d-immutable","has_notes":false,"flag_type":1}