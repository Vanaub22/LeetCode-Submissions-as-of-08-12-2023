{"id":1082743479,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1698126834,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/1082743479/","is_pending":"Not Pending","title":"Find Largest Value in Each Tree Row","memory":"22.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> largestValues(TreeNode* root) {\n        if(!root) return {};\n        // Level-order Traversal\n        vector<int> largestRowValues;\n        queue<TreeNode*> q;\n        q.push(root);\n        while(!q.empty()) {\n            int n=q.size(),maxNodeVal=INT_MIN;\n            for(int i=1;i<=n;i++) {\n                TreeNode* node=q.front();\n                if(node->left) q.push(node->left);\n                if(node->right) q.push(node->right);\n                maxNodeVal=max(maxNodeVal,node->val); // Finding the largest value in this row\n                q.pop();\n            }\n            largestRowValues.emplace_back(maxNodeVal);\n        }\n        return largestRowValues;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-largest-value-in-each-tree-row","has_notes":false,"flag_type":1}